<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
 -->

<!--
     NOTE: This features XML file uses the Karaf "install" attribute to specify whether a feature
     is automatically installed when an app's KAR file is hot deployed.

     Description of the install attribute from the Karaf features XSD:

     "Installation mode. Can be either manual or auto. Specifies whether the feature should be
     automatically installed when dropped inside the deploy folder. Note: This attribute doesn't
     affect feature descriptors that are installed from the command line or as part of the
     org.apache.karaf.features.cfg."
-->
<features name="${project.artifactId}-${project.version}"
          xmlns="http://karaf.apache.org/xmlns/features/v1.3.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://karaf.apache.org/xmlns/features/v1.3.0 http://karaf.apache.org/xmlns/features/v1.3.0">

    <feature name="catalog-core-api" install="manual" version="${project.version}"
             description="Catalog API interfaces and simple implementations.">
        <bundle dependency="true">mvn:ddf.platform.api/platform-api/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-api/${project.version}</bundle>
        <bundle>mvn:ddf.mime.core/mime-core-api/${project.version}</bundle>
        <bundle>mvn:org.apache.tika/tika-core/${tika.version}</bundle>
        <bundle>mvn:org.apache.tika/tika-bundle/${tika.version}</bundle>
        <bundle>mvn:org.codice.thirdparty/gt-opengis/${opengis.bundle.version}</bundle>
    </feature>

    <feature name="catalog-core" install="manual" version="${project.version}"
             description="Catalog Core feature containing the API, third party bundles necessary to run ddf-core.">
        <feature prerequisite="true">catalog-core-api</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-jaxrs</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-commons/${project.version}</bundle>
        <bundle>mvn:ddf.measure/measure-api/${project.version}</bundle>
        <bundle>mvn:org.codice.thirdparty/picocontainer/1.2_1</bundle>
        <bundle>mvn:org.codice.thirdparty/vecmath/1.3.2_1</bundle>
        <!-- for GeoTools -->
        <bundle>mvn:org.codice.thirdparty/geotools-suite/${org.geotools.bundle.version}</bundle>
        <bundle>mvn:org.codice.thirdparty/jts/${jts.bundle.version}</bundle>
        <bundle dependency="true">
            mvn:commons-collections/commons-collections/${commons-collections.version}
        </bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-federationstrategy/${project.version}</bundle>
        <bundle>mvn:org.codice.thirdparty/lucene-core/3.0.2_1</bundle>
        <bundle>mvn:ddf.catalog.core/ddf-pubsub/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-eventcommands/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/ddf-pubsub-tracker/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-urlresourcereader/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/filter-proxy/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-commands/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-solrcommands/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-metacardgroomerplugin/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/metacard-type-registry/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-attributeregistry/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-injectattribute/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-camelcomponent/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-localstorageprovider/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-standardframework/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-resourcesizeplugin/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-resourcestatusplugin/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-tagsfilterplugin/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.security/catalog-security-logging/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-attribute/${project.version}
        </bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-defaultvalues/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-metacardtype/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/versioning-api/${project.version}</bundle>
    </feature>

    <feature name="catalog-core-content" install="auto" version="${project.version}"
             description="Core features for content">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-contentresourcereader/${project.version}</bundle>
        <bundle>mvn:org.codice.ddf/checksum/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-checksum/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-content-uri/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-videothumbnail/${project.version}</bundle>
    </feature>

    <feature name="catalog-core-directorymonitor" install="auto" version="${project.version}"
             description="Monitors directories to process content files.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-camelcontext/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-directorymonitor/${project.version}</bundle>
    </feature>

    <feature name="catalog-core-migratable" install="auto" version="${project.version}"
             description="Catalog Core feature to enable metacard export.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-migratable/${project.version}</bundle>
    </feature>

    <feature name="catalog-core-downloadaction" install="auto" version="${project.version}"
             description="Catalog Core feature to download resources asynchronously.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-downloadaction/${project.version}</bundle>
    </feature>

    <feature name="catalog-metrics" install="auto" version="${project.version}">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-metricsplugin/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.core/catalog-core-sourcemetricsplugin/${project.version}</bundle>
    </feature>

    <feature name="catalog-core-backupplugin" install="auto" version="${project.version}"
             description="Catalog post ingest plug-in to backup metacards to a file system.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-backupplugin/${project.version}</bundle>
    </feature>

    <feature name="catalog-plugin-expirationdate" install="manual" version="${project.version}"
             description="Catalog pre-ingest plugin to set an expiration date on metacards.">
        <feature prerequisite="true">catalog-core</feature>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-expirationdate/${project.version}</bundle>
    </feature>

    <feature name="catalog-schematron-plugin" install="auto" version="${project.version}"
             description="Schematron pre-ingest validation plugin.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.schematron/catalog-schematron-plugin/${project.version}</bundle>
    </feature>

    <feature name="catalog-rest" install="auto" version="${project.version}">
        <feature prerequisite="true">catalog-app</feature>
        <feature>catalog-rest-endpoint</feature>
        <feature>catalog-opensearch-endpoint</feature>
        <feature>catalog-opensearch-source</feature>
    </feature>

    <feature name="catalog-rest-endpoint" install="manual" version="${project.version}"
             description="REST Endpoint provides CRUD operations on the Catalog Framework.">
        <bundle>mvn:ddf.catalog.rest/catalog-rest-endpoint/${project.version}</bundle>
    </feature>

    <feature name="catalog-opensearch-endpoint" install="manual" version="${project.version}"
             description="OpenSearch Query Endpoint with Atom Transformer.">
        <bundle>mvn:ddf.catalog.opensearch/catalog-opensearch-endpoint/${project.version}</bundle>
        <feature>abdera</feature>
        <bundle>mvn:org.apache.abdera/abdera-extensions-opensearch/${abdera.version}</bundle>
        <bundle>mvn:org.apache.abdera/abdera-server/${abdera.version}</bundle>
    </feature>

    <feature name="catalog-opensearch-source" install="manual" version="${project.version}"
             description="OpenSearch Federated Source queries a Federated Source using OpenSearch.">
        <feature>abdera</feature>
        <feature>cxf-rs-security-sso-saml</feature>
        <bundle>mvn:org.apache.abdera/abdera-server/${abdera.version}</bundle>
        <bundle>mvn:ddf.catalog.opensearch/catalog-opensearch-source/${project.version}</bundle>
    </feature>

    <feature name="catalog-confluence-source" install="auto" version="${project.version}"
             description="Confluence source and transformer">
        <feature prerequisite="true">catalog-app</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-jaxrs</feature>
        <bundle>mvn:ddf.catalog.confluence/catalog-confluence-source/${project.version}</bundle>
    </feature>

    <feature name="abdera" install="manual" version="${project.version}"
             description="Apache Abdera">
        <bundle>wrap:mvn:org.apache.james/apache-mime4j-core/0.7.2</bundle>
        <bundle>mvn:commons-codec/commons-codec/1.4</bundle>
        <!-- This bundle <bundle>mvn:org.apache.ws.commons.axiom/axiom-impl/1.2.10</bundle>
        does not export any classes. Must use the servicemix version. -->
        <bundle>
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.axiom-impl/1.2.12-2
        </bundle>
        <bundle>mvn:org.apache.ws.commons.axiom/axiom-api/1.2.14</bundle>
        <bundle>mvn:org.apache.abdera/abdera-core/${abdera.version}</bundle>
        <bundle>mvn:org.apache.abdera/abdera-client/${abdera.version}</bundle>
        <bundle>mvn:org.apache.abdera/abdera-i18n/${abdera.version}</bundle>
        <!-- Cannot use <bundle>mvn:org.apache.abdera/abdera-parser/${abdera.version}</bundle>
        because of a classpath issue with OMFactory. Servicemix fixes this abdera-parser.-->
        <bundle>
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.abdera-parser/1.1.3_1
        </bundle>
        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.dom4j/1.6.1_5
        </bundle>
        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jdom/1.1.2_1
        </bundle>
        <bundle>mvn:org.codice.thirdparty/commons-httpclient/3.1.0_1</bundle>
    </feature>

    <feature name="catalog-plugin-federationreplication" install="manual"
             version="${project.version}" description="">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.plugin/plugin-federation-replication/${project.version}</bundle>
    </feature>

    <feature name="catalog-plugin-jpeg2000" install="auto" version="${project.version}"
             description="">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.plugin/jpeg2000-thumbnail-converter/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-metadata" install="auto" version="${project.version}"
             description="Retrieves the attribute, Metadata, from the Metacard.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-metadata/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-thumbnail" install="auto" version="${project.version}"
             description="Retrieves the attribute, Thumbnail, from the Metacard.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-thumbnail/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-transformer-xsltengine" install="auto" version="${project.version}"
             description="Provides XSLT transformer engine.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/service-xslt-transformer/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-resource" install="auto" version="${project.version}"
             description="Resource MetacardTransformer and InputTransformer">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-resource/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-tika" install="auto" version="${project.version}"
             description="DDF default Input Transformer.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/tika-input-transformer/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-video" install="auto" version="${project.version}"
             description="Input transformer that handles video files.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/video-input-transformer/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-json" install="auto" version="${project.version}"
             description="DDF GeoJSON Transformer translates metacards into GeoJSON.">
        <feature prerequisite="true">catalog-app</feature>
        <feature prerequisite="true">catalog-transformer-geoformatter</feature>
        <bundle>mvn:ddf.catalog.transformer/geojson-metacard-transformer/${project.version}</bundle>
        <bundle>mvn:ddf.catalog.transformer/geojson-queryresponse-transformer/${project.version}
        </bundle>
        <bundle>mvn:ddf.catalog.transformer/geojson-input-transformer/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-atom" install="auto" version="${project.version}"
             description="Atom Query Response Transformer.">
        <feature prerequisite="true">catalog-app</feature>
        <feature prerequisite="true">catalog-transformer-geoformatter</feature>
        <bundle>mvn:org.apache.abdera/abdera-extensions-opensearch/${abdera.version}</bundle>
        <bundle>mvn:org.apache.abdera/abdera-extensions-geo/${abdera.version}</bundle>
        <bundle>mvn:org.apache.abdera/abdera-server/${abdera.version}</bundle>
        <bundle>mvn:ddf.catalog.transformer/service-atom-transformer/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-geoformatter" install="manual" version="${project.version}"
             description="DDF Geo library to help with conversion of geometry objects into various formats such GeoJson, GeoRSS, etc.">
        <feature prerequisite="true">abdera</feature>
        <bundle>mvn:ddf.catalog.common/geo-formatter/${project.version}</bundle>
        <bundle>mvn:org.apache.abdera/abdera-extensions-geo/${abdera.version}</bundle>
        <bundle>mvn:com.googlecode.json-simple/json-simple/1.1.1</bundle>
        <bundle>mvn:org.codice.thirdparty/jts/${jts.bundle.version}</bundle>
    </feature>

    <feature name="catalog-transformer-xml" install="auto" version="${project.version}"
             description="XML MetacardTransformer and InputTransformer">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-xml/${project.version}</bundle>
        <bundle>
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xstream/${xstream.bundle.version}
        </bundle>
        <bundle>
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xpp3/${cxf.xpp3.bundle.version}
        </bundle>
        <bundle>mvn:commons-collections/commons-collections/${commons-collections.version}</bundle>
    </feature>

    <feature name="catalog-transformer-zip" install="auto" version="${project.version}"
             description="ZIP Transformer">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-zip/${project.version}</bundle>
    </feature>

    <feature name="catalog-security-filter" install="auto" version="${project.version}"
             description="DDF Catalog Security Filtering">
        <feature prerequisite="true">catalog-app</feature>
        <feature prerequisite="true">security-pdp-authz</feature>
        <bundle>mvn:ddf.catalog.security/catalog-security-filter/${project.version}</bundle>
    </feature>

    <feature name="catalog-security-operationplugin" install="auto" version="${project.version}"
             description="DDF Catalog Security Operation Plugin">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.security/catalog-security-operationplugin/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-security-plugin" install="auto" version="${project.version}"
             description="DDF Security Plugins">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.security/catalog-security-plugin/${project.version}</bundle>
    </feature>

    <feature name="catalog-security-resourceplugin" install="auto" version="${project.version}"
             description="DDF Catalog Resource URI Policy Plugins">
        <feature prerequisite="true">catalog-app</feature>
        <feature prerequisite="true">security-pdp-authz</feature>
        <bundle>mvn:ddf.catalog.security/catalog-security-resourceplugin/${project.version}</bundle>
    </feature>

    <feature name="catalog-security-policyplugin" install="auto" version="${project.version}"
             description="DDF Catalog Policy Plugins">
        <feature prerequisite="true">catalog-app</feature>
        <feature prerequisite="true">security-pdp-authz</feature>
        <bundle>mvn:ddf.catalog.security/catalog-security-policyplugin/${project.version}</bundle>
    </feature>

    <feature name="catalog-security-metacardattributeplugin" install="auto"
             version="${project.version}"
             description="DDF Catalog Metacard Attribute Policy Plugin">
        <feature prerequisite="true">security-pdp-authz</feature>
        <bundle>
            mvn:ddf.catalog.security/catalog-security-metacardattributeplugin/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-security-xmlattributeplugin" install="auto" version="${project.version}"
             description="DDF Catalog XML Attribute Policy Plugin">
        <feature prerequisite="true">security-pdp-authz</feature>
        <bundle>mvn:ddf.catalog.security/catalog-security-xmlattributeplugin/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-admin-module-sources" install="auto" version="${project.version}"
             description="DDF Admin Module">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.admin/catalog-admin-module-sources/${project.version}</bundle>
    </feature>

    <feature name="admin-poller-service-bean" install="auto" version="${project.version}"
             description="DDF Admin Poller">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.admin/catalog-admin-poller-service/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-streaming" install="manual" version="${project.version}"
             description="DDF Generic Input Transformer API">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-streaming-api/${project.version}
        </bundle>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-streaming-impl/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-plugin-metacard-validation" install="manual" version="${project.version}"
             description="DDF Metacard Validator Plugins">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-metacard-validation/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-core-validator" install="manual" version="${project.version}"
             description="DDF Metacard and attribute validation services">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-validator/${project.version}</bundle>
        <feature>catalog-plugin-metacard-validation</feature>
    </feature>

    <feature name="catalog-core-validationparser" install="auto" version="${project.version}"
             description="Provides the ability to define new metacard types, attributes, attribute validators, and default values via JSON files">
        <feature prerequisite="true">catalog-core-validator</feature>
        <bundle>mvn:ddf.catalog.core/catalog-core-validationparser/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-pdf" install="auto" version="${project.version}"
             description="DDF PDF Input Transformer">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-pdf/${project.version}</bundle>
    </feature>

    <feature name="catalog-versioning-plugin" install="manual" version="${project.version}"
             description="DDF Metacard Versioning Plugin">
        <feature prerequisite="true">catalog-core</feature>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-versioning/${project.version}</bundle>
    </feature>

    <feature name="catalog-transformer-pptx" install="auto" version="${project.version}"
             description="DDF PPTX Input Transformer">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-pptx/${project.version}</bundle>
    </feature>

    <feature name="catalog-validator-metacardduplication" install="manual"
             version="${project.version}"
             description="DDF Metacard Duplicate Validator">
        <feature prerequisite="true">catalog-core</feature>
        <bundle>
            mvn:org.codice.ddf.validator/catalog-validator-metacardduplication/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-transformer-overlay" install="auto" version="${project.version}"
             description="Transforms a metacard into a geographically aligned image suitable for overlaying on a map">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog.transformer/catalog-transformer-overlay/${project.version}</bundle>
    </feature>

    <feature name="catalog-app" install="auto" version="${project.version}"
             description="The Catalog provides a framework for storing, searching, processing, and transforming information.\nClients typically perform query, create, read, update, and delete (QCRUD) operations against the Catalog.\nAt the core of the Catalog functionality is the Catalog Framework, which routes all requests and responses through the system, invoking additional processing per the system configuration.::Catalog">
        <feature prerequisite="true">security-services-app</feature>
        <feature prerequisite="true">admin-app</feature>
        <feature>catalog-core-api</feature>
        <feature>catalog-core</feature>
    </feature>

    <feature name="catalog-client-info" install="auto" version="${project.version}"
             description="Places client-specific information from the servlet API into request and response properties">
        <feature prerequisite="true">catalog-core-api</feature>
        <feature prerequisite="true">clientinfo-filter</feature>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-clientinfo/${project.version}</bundle>
    </feature>

    <feature name="catalog-metacardingest-network" install="auto" version="${project.version}"
             description="Conditional attribute enhancement to metacards during ingest using client network information">
        <feature prerequisite="true">catalog-core-api</feature>
        <feature prerequisite="true">clientinfo-filter</feature>
        <bundle>mvn:ddf.catalog.plugin/catalog-plugin-metacardingest-network/${project.version}
        </bundle>
    </feature>

    <feature name="catalog-ftp" install="manual" version="${project.version}"
             description="FTP endpoint for ingesting files into the DDF catalog. Supports PUT and MPUT operations only. Avoids the extra IO overhead of otherwise having to temporarily write the file to the file system.">
        <feature prerequisite="true">catalog-app</feature>
        <bundle>mvn:ddf.catalog/ftp/${project.version}</bundle>
        <bundle>mvn:org.apache.mina/mina-core/${mina.version}</bundle>
    </feature>

</features>
