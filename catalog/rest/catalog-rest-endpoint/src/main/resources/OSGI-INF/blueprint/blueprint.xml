<?xml version="1.0" encoding="UTF-8"?>
<!-- /**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version. 
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/ -->
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

  http://cxf.apache.org/blueprint/jaxrs http://cxf.apache.org/schemas/blueprint/jaxrs.xsd">

	<reference id="transformerMapper" interface="ddf.mime.MimeTypeToTransformerMapper"/>
	<reference id="catalog" interface="ddf.catalog.CatalogFramework"/>
	<reference id="filterBuilder" interface="ddf.catalog.filter.FilterBuilder"/>
    <reference id="tikaMimeTypeResolver" interface="ddf.mime.MimeTypeResolver"/>
    

	<reference-list id="metacardTransformerRefList"
                    interface="ddf.catalog.transform.MetacardTransformer" availability="optional">
		<reference-listener bind-method="bind" unbind-method="unbind">
			<bean class="org.codice.ddf.endpoints.rest.action.ActionProviderRegistryProxy">
				<argument ref="blueprintBundleContext"/>
			</bean>
		</reference-listener>
	</reference-list>

	<bean id="restSvc" class="org.codice.ddf.endpoints.rest.RESTEndpoint">
		<argument ref="catalog"/>
		<property name="filterBuilder" ref="filterBuilder"/>
		<property name="mimeTypeToTransformerMapper" ref="transformerMapper"/>
        <property name="tikaMimeTypeResolver" ref="tikaMimeTypeResolver"/>
	</bean>

	<jaxrs:server id="restService" address="/catalog">
		<jaxrs:serviceBeans>
			<ref component-id="restSvc"/>
		</jaxrs:serviceBeans>

        <jaxrs:inInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpInInterceptor">
                <property name="callbackParam" value="callback"/>
            </bean>
        </jaxrs:inInterceptors>
        <jaxrs:outInterceptors>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPreStreamInterceptor"/>
            <bean class="org.apache.cxf.jaxrs.provider.jsonp.JsonpPostStreamInterceptor"/>
        </jaxrs:outInterceptors>
    </jaxrs:server>

	<bean id="viewActionProvider"
          class="org.codice.ddf.endpoints.rest.action.ViewMetacardActionProvider">
		<argument value="catalog.data.metacard.view"/>
	</bean>

	<service ref="viewActionProvider" interface="ddf.action.ActionProvider">
		<service-properties>
			<entry key="id" value="catalog.data.metacard.view"/>
		</service-properties>
	</service>

	<service ref="viewActionProvider"
             interface="org.codice.ddf.configuration.ConfigurationWatcher"/>

</blueprint>