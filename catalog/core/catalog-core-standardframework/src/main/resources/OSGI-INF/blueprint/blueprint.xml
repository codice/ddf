<?xml version="1.0" encoding="UTF-8"?>
<!-- /**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/ -->
<blueprint xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.1.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.2.0"
           xsi:schemaLocation="
	    http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
        ">

    <!-- According to the schema the type-converters element must be above all other elements except 'description' -->
    <type-converters>
        <bean id="listConverter" class="ddf.catalog.util.impl.ListConverter"/>
        <bean id="mapConverter" class="ddf.catalog.util.impl.MapConverter"/>
    </type-converters>

    <ext:property-placeholder/>

    <reference id="transformerMapper" interface="ddf.mime.MimeTypeToTransformerMapper"/>

    <reference id="mimeTypeMapper" interface="ddf.mime.MimeTypeMapper" />

    <bean id="sourceListener" class="ddf.catalog.util.impl.Masker"/>

    <!-- START Sorted Plugin lists that are sorted by their ServiceReferences -->
    <bean id="preCreateStorageSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="postCreateStorageSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="preUpdateStorageSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="postUpdateStorageSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="preIngestSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="postIngestSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="preQuerySortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="postQuerySortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="preFederatedQuerySortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="postFederatedQuerySortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="preResourceSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="postResourceSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="catalogProviderSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="storageProviderSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="resourceReaderSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="policySortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="accessSortedList" class="ddf.catalog.util.impl.SortedServiceList">
    </bean>
    <bean id="catalogStoreMap" class="ddf.catalog.util.impl.DescribableServiceMap">
    </bean>
    <bean id="federatedSourceMap" class="ddf.catalog.util.impl.DescribableServiceMap">
    </bean>


    <!-- END of Sorted Plugin lists -->

    <!-- CATALOGPROVIDER REFERENCE -->
    <reference-list id="catalog" interface="ddf.catalog.source.CatalogProvider"
                    availability="optional">  <!-- DDF-1618: Made CatalogProvider optional -->
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="sourceListener"/>
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="sourcePollerRunner"/>
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="catalogProviderSortedList"/>
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="ddf"/>
    </reference-list>
    <!-- STORAGEPROVIDER REFERENCE -->
    <reference-list id="storage" interface="ddf.catalog.content.StorageProvider"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="storageProviderSortedList"/>
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="ddf"/>
    </reference-list>
	<!-- CATALOG STORE REFERENCE -->
	<reference-list id="catalogStore" interface="ddf.catalog.source.CatalogStore"
					availability="optional">
		<reference-listener bind-method="bind"
							unbind-method="unbind" ref="catalogStoreMap"/>
	</reference-list>
    <!-- CONTENT -->
    <reference-list id="preCreateStorage" interface="ddf.catalog.content.plugin.PreCreateStoragePlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="preCreateStorageSortedList"/>
    </reference-list>
    <reference-list id="postCreateStorage" interface="ddf.catalog.content.plugin.PostCreateStoragePlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="postCreateStorageSortedList"/>
    </reference-list>
    <reference-list id="preUpdateStorage" interface="ddf.catalog.content.plugin.PreUpdateStoragePlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="preUpdateStorageSortedList"/>
    </reference-list>
    <reference-list id="postUpdateStorage" interface="ddf.catalog.content.plugin.PostUpdateStoragePlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="postUpdateStorageSortedList"/>
    </reference-list>
    <!-- PREINGEST REFERENCE -->
    <reference-list id="preIngest" interface="ddf.catalog.plugin.PreIngestPlugin"
                    availability="optional">
		<reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="preIngestSortedList"/>
	</reference-list>
    <!-- POSTINGEST REFERENCE -->
    <reference-list id="postIngest" interface="ddf.catalog.plugin.PostIngestPlugin"
                    availability="optional">
		<reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="postIngestSortedList"/>
	</reference-list>
    <!-- PREQUERY REFERENCE -->
    <reference-list id="preQuery" interface="ddf.catalog.plugin.PreQueryPlugin"
                    availability="optional">
		<reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="preQuerySortedList"/>
	</reference-list>
    <!-- POSTQUERY REFERENCE -->
    <reference-list id="postQuery" interface="ddf.catalog.plugin.PostQueryPlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="postQuerySortedList"/>
    </reference-list>
    <!-- PRE FEDERATED QUERY REFERENCE -->
    <reference-list id="preFederatedQuery" interface="ddf.catalog.plugin.PreFederatedQueryPlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="preFederatedQuerySortedList"/>
    </reference-list>
    <!-- POST FEDERATED QUERY REFERENCE -->
    <reference-list id="postFederatedQuery" interface="ddf.catalog.plugin.PostFederatedQueryPlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="postFederatedQuerySortedList"/>
    </reference-list>
    <!-- PRERESOURCE REFERENCE -->
    <reference-list id="preResource"
                    interface="ddf.catalog.plugin.PreResourcePlugin" availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="preResourceSortedList"/>
    </reference-list>
    <!-- POSTRESOURCE REFERENCE -->
    <reference-list id="postResource"
                    interface="ddf.catalog.plugin.PostResourcePlugin" availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="postResourceSortedList"/>
    </reference-list>

    <reference-list id="connectedSources" interface="ddf.catalog.source.ConnectedSource"
                    availability="optional">
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="sourceListener"/>
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="sourcePollerRunner"/>
    </reference-list>

    <reference-list id="federatedSources" interface="ddf.catalog.source.FederatedSource"
                    availability="optional">
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="sourcePollerRunner"/>
        <reference-listener bind-method="bind"
                            unbind-method="unbind" ref="federatedSourceMap"/>
    </reference-list>

    <reference-list id="resourceReaders" interface="ddf.catalog.resource.ResourceReader"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="resourceReaderSortedList"/>
    </reference-list>

    <reference-list id="policyPlugins" interface="ddf.catalog.plugin.PolicyPlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="policySortedList"/>
    </reference-list>

    <reference-list id="accessPlugins" interface="ddf.catalog.plugin.AccessPlugin"
                    availability="optional">
        <reference-listener bind-method="bindPlugin"
                            unbind-method="unbindPlugin" ref="accessSortedList"/>
    </reference-list>

    <bean id="queryThreadPool" class="java.util.concurrent.Executors"
          factory-method="newCachedThreadPool"/>

    <bean id="cacheThreadPool" class="java.util.concurrent.Executors"
          factory-method="newFixedThreadPool">
        <argument value="${org.codice.ddf.system.threadPoolSize}"/>
    </bean>

    <bean id="downloadThreadPool" class="java.util.concurrent.Executors"
          factory-method="newFixedThreadPool">
        <argument value="${org.codice.ddf.system.threadPoolSize}"/>
    </bean>

    <reference id="resourceActionProvider" interface="ddf.action.ActionProvider"
               filter="id=catalog.data.metacard.resource"
               availability="optional"/>
    <reference id="derivedActionProvider" interface="ddf.action.ActionProvider"
               filter="id=catalog.data.metacard.derived-content"
               availability="optional"/>

    <bean id="queryResponsePostProcessor" class="ddf.catalog.impl.QueryResponsePostProcessor">
        <argument ref="resourceActionProvider"/>
        <argument ref="derivedActionProvider"/>
    </bean>

    <reference id="filterAdapter" interface="ddf.catalog.filter.FilterAdapter"/>

    <!-- Create the SolrCache -->
    <bean id="solrCatalogCache" class="ddf.catalog.cache.solr.impl.SolrCache"
          destroy-method="shutdown">
        <argument ref="filterAdapter"/>
        <argument>
            <bean class="ddf.catalog.source.solr.SolrFilterDelegateFactoryImpl"/>
        </argument>
    </bean>

    <bean id="validationQueryFactory" class="ddf.catalog.cache.solr.impl.ValidationQueryFactory">
        <argument ref="filterAdapter" />
        <argument ref="filterBuilder" />
    </bean>

    <bean id="federationStrategy" class="ddf.catalog.cache.solr.impl.CachingFederationStrategy"
          destroy-method="shutdown">
        <cm:managed-properties
                persistent-id="ddf.catalog.federation.impl.CachingFederationStrategy"
                update-strategy="container-managed"/>
        <argument ref="queryThreadPool"/>
        <argument ref="preFederatedQuerySortedList"/>
        <argument ref="postFederatedQuerySortedList"/>
        <argument ref="solrCatalogCache"/>
        <argument ref="cacheThreadPool"/>
        <argument ref="filterAdapter"/>
        <argument ref="filterBuilder"/>
        <argument ref="validationQueryFactory" />
        <property name="maxStartIndex" value="50000"/>
    </bean>

    <service ref="federationStrategy" interface="ddf.catalog.federation.FederationStrategy"
             ranking="100">
        <service-properties>
            <entry key="shortname" value="federationStrategy"/>
        </service-properties>
    </service>
    <service ref="federationStrategy" interface="ddf.catalog.plugin.PostIngestPlugin"/>

    <reference-list id="resourceActionProviderList" interface="ddf.action.ActionProvider"
                    filter="(id=catalog.data.metacard.resource)"
                    availability="optional"/>

    <bean id="retrieveStatusEventPublisher"
          class="ddf.catalog.event.retrievestatus.DownloadsStatusEventPublisher">
        <argument ref="eventAdmin"/>
        <argument ref="resourceActionProviderList"/>
    </bean>

    <bean id="retrieveStatusEventListener"
          class="ddf.catalog.event.retrievestatus.DownloadsStatusEventListener"/>
    <service ref="retrieveStatusEventListener" interface="org.osgi.service.event.EventHandler">
        <service-properties>
            <entry key="event.topics">
                <array value-type="java.lang.String">
                    <value>ddf/download/cancel</value>
                </array>
            </entry>
        </service-properties>
    </service>

    <bean id="downloadStatusInfo" class="ddf.catalog.event.retrievestatus.DownloadStatusInfoImpl">
        <property name="eventAdmin" ref="eventAdmin"/>
    </bean>
    <service ref="downloadStatusInfo"
             interface="ddf.catalog.event.retrievestatus.DownloadStatusInfo"/>

    <bean id="productCache" class="ddf.catalog.cache.impl.ResourceCache" init-method="setupCache"
          destroy-method="teardownCache">
        <property name="productCacheDirectory" value=""/>
        <property name="cacheDirMaxSizeMegabytes" value="10240"/>
        <!-- 10 GB -->
        <property name="context" ref="blueprintBundleContext"/>
        <property name="xmlConfigFilename" value="reliableResource-hazelcast.xml"/>
    </bean>

    <service ref="productCache" interface="ddf.catalog.cache.ResourceCacheInterface"/>

    <bean id="reliableResourceDownloadManager"
          class="ddf.catalog.resource.download.ReliableResourceDownloadManager"
          init-method="init" destroy-method="cleanUp">
        <argument ref="productCache"/>
        <argument ref="retrieveStatusEventPublisher"/>
        <argument ref="retrieveStatusEventListener"/>
        <argument ref="downloadStatusInfo"/>
        <argument ref="downloadThreadPool"/>
    </bean>

    <bean id="historian" class="ddf.catalog.history.Historian">
        <cm:managed-properties persistent-id="ddf.catalog.history.Historian"
                               update-strategy="container-managed"/>
    </bean>

    <reference id="filterBuilder" interface="ddf.catalog.filter.FilterBuilder"/>

    <!-- create the ddf bean -->
    <bean id="ddf" class="ddf.catalog.impl.CatalogFrameworkImpl">
        <cm:managed-properties persistent-id="ddf.catalog.CatalogFrameworkImpl"
                               update-strategy="container-managed"/>
        <argument>
            <bean class="ddf.catalog.impl.FrameworkProperties">
                <property name="catalogProviders" ref="catalogProviderSortedList"/>
                <property name="storageProviders" ref="storageProviderSortedList"/>
                <property name="catalogStoresMap" ref="catalogStoreMap"/>
                <property name="bundleContext" ref="blueprintBundleContext"/>
                <property name="preCreateStoragePlugins" ref="preCreateStorageSortedList"/>
                <property name="postCreateStoragePlugins" ref="postCreateStorageSortedList"/>
                <property name="preUpdateStoragePlugins" ref="preUpdateStorageSortedList"/>
                <property name="postUpdateStoragePlugins" ref="postUpdateStorageSortedList"/>
                <property name="preIngest" ref="preIngestSortedList"/>
                <property name="postIngest" ref="postIngestSortedList"/>
                <property name="preQuery" ref="preQuerySortedList"/>
                <property name="postQuery" ref="postQuerySortedList"/>
                <property name="preResource" ref="preResourceSortedList"/>
                <property name="postResource" ref="postResourceSortedList"/>
                <property name="connectedSources" ref="connectedSources"/>
                <property name="federatedSources" ref="federatedSourceMap"/>
                <property name="resourceReaders" ref="resourceReaderSortedList"/>
                <property name="federationStrategy" ref="federationStrategy"/>
                <property name="pool" ref="queryThreadPool"/>
                <property name="queryResponsePostProcessor" ref="queryResponsePostProcessor"/>
                <property name="sourcePoller" ref="sourcePoller"/>
                <property name="resourceCache" ref="productCache"/>
                <property name="downloadsStatusEventPublisher" ref="retrieveStatusEventPublisher"/>
                <property name="reliableResourceDownloadManager"
                          ref="reliableResourceDownloadManager"/>
                <property name="policyPlugins" ref="policySortedList"/>
                <property name="accessPlugins" ref="accessSortedList"/>
                <property name="filterBuilder" ref="filterBuilder"/>
                <property name="mimeTypeToTransformerMapper" ref="transformerMapper"/>
                <property name="mimeTypeMapper" ref="mimeTypeMapper"/>
                <property name="validationQueryFactory" ref="validationQueryFactory" />
            </bean>
        </argument>
        <property name="historian" ref="historian"/>
        <property name="masker" ref="sourceListener"/>
        <property name="cacheEnabled" value="true"/>
        <property name="delayBetweenRetryAttempts" value="10"/>
        <property name="maxRetryAttempts" value="3"/>
        <property name="retrievalMonitorPeriod" value="5"/>
        <property name="cacheWhenCanceled" value="false"/>
        <property name="notificationEnabled" value="true"/>
    </bean>

    <bean id="sourcePoller" class="ddf.catalog.util.impl.SourcePoller">
        <argument ref="sourcePollerRunner"/>
    </bean>

    <!-- Poller instance which is a listener and source polling mechanism -->
    <bean id="sourcePollerRunner" class="ddf.catalog.util.impl.SourcePollerRunner">
    </bean>

    <!-- export the bean on the service registry -->
    <service ref="ddf" interface="ddf.catalog.CatalogFramework">
        <registration-listener ref="sourcePoller"
                               registration-method="start" unregistration-method="cancel"/>
    </service>

    <!-- Events -->

    <reference-list id="preSubscription" interface="ddf.catalog.plugin.PreSubscriptionPlugin"
                    availability="optional"/>

    <reference-list id="preDelivery" interface="ddf.catalog.plugin.PreDeliveryPlugin"
                    availability="optional"/>


    <bean id="eventProcessorService" class="ddf.catalog.pubsub.EventProcessorImpl"
          init-method="init" destroy-method="destroy">
        <argument ref="blueprintBundleContext"/>
        <argument ref="eventAdmin"/>
        <argument ref="preSubscription"/>
        <argument ref="preDelivery"/>
        <argument ref="ddf"/>
    </bean>

    <reference id="eventAdmin" interface="org.osgi.service.event.EventAdmin"/>

    <service ref="eventProcessorService" interface="ddf.catalog.event.EventProcessor"/>
    <service ref="eventProcessorService" interface="ddf.catalog.plugin.PostIngestPlugin"/>
    <service ref="eventProcessorService" interface="org.osgi.service.event.EventHandler">
        <service-properties>
            <entry key="event.topics">
                <array value-type="java.lang.String">
                    <value>ddf/catalog/event/CREATED</value>
                    <value>ddf/catalog/event/UPDATED</value>
                    <value>ddf/catalog/event/DELETED</value>
                </array>
            </entry>
        </service-properties>
    </service>

</blueprint>
