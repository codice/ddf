<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version. 
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>catalog-solr</artifactId>
        <groupId>ddf.catalog.solr</groupId>
        <version>2.17.0-SNAPSHOT</version>
    </parent>
    <artifactId>catalog-solr-provider</artifactId>
    <name>DDF :: Catalog :: Solr :: Provider</name>
    <packaging>bundle</packaging>
    <description>Catalog Provider that connects to Solr</description>
    <dependencies>
        <dependency>
            <groupId>ddf.catalog.core</groupId>
            <artifactId>catalog-core-solr</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>ddf.catalog.core</groupId>
            <artifactId>filter-proxy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ddf.platform.util</groupId>
            <artifactId>platform-util</artifactId>
        </dependency>
        <dependency>
            <groupId>ddf.catalog.core</groupId>
            <artifactId>catalog-core-api-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codice</groupId>
            <artifactId>lux</artifactId>
            <version>${lux.version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.saxon</groupId>
            <artifactId>Saxon-HE</artifactId>
            <version>${lux.saxon.version}</version>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Embed-Dependency>
                            platform-util,
                            catalog-core-solr,
                            catalog-core-api-impl,
                            lux,
                            Saxon-HE
                        </Embed-Dependency>
                        <Include-Resource>
                            {maven-resources},
                            target/classes/describable.properties
                        </Include-Resource>
                        <Export-Package/>
                        <Import-Package>
                            <!--excluded javax.xml.xquery package coming from lux -->
                            !javax.xml.xquery,
                            !org.apache.lucene.*,
                            !org.apache.solr.*,

                            <!--packages required for solrj -->
                            org.apache.jute;version=${solr.zookeeper.version},
                            org.apache.solr.client.solrj;version=${solr.version},
                            org.apache.solr.client.solrj.beans;version=${solr.version},
                            org.apache.solr.client.solrj.cloud;version=${solr.version},
                            org.apache.solr.client.solrj.cloud.autoscaling;version=${solr.version},
                            org.apache.solr.client.solrj.impl;version=${solr.version},
                            org.apache.solr.client.solrj.request;version=${solr.version},
                            org.apache.solr.client.solrj.response;version=${solr.version},
                            org.apache.solr.common;version=${solr.version},
                            org.apache.solr.common.params;version=${solr.version},
                            org.apache.solr.common.util;version=${solr.version},
                            org.apache.zookeeper;version=${solr.zookeeper.version},
                            org.apache.zookeeper.client;version=${solr.zookeeper.version},
                            org.apache.zookeeper.data;version=${solr.zookeeper.version},
                            org.apache.zookeeper.proto;version=${solr.zookeeper.version},
                            org.noggit;version=${solr.noggit.version},

                            <!-- used by  lux -->
                            org.apache.lucene.analysis.charfilter;version=${solr.version},
                            org.apache.lucene.analysis.core;version=${solr.version},
                            org.apache.lucene.analysis.miscellaneous;version=${solr.version},
                            org.apache.lucene.analysis.standard;version=${solr.version},
                            org.apache.lucene.analysis.tokenattributes;version=${solr.version},
                            org.apache.lucene.queryparser.classic;version=${solr.version},
                            org.apache.lucene.queryparser.ext;version=${solr.version},
                            org.apache.lucene.queryparser.xml;version=${solr.version},
                            org.apache.lucene.search.spans;version=${solr.version},
                            org.apache.lucene.store;version=${solr.version},
                            org.apache.lucene.util;version=${solr.version},
                            org.apache.solr.parser;version=${solr.version},

                            <!-- dependencies used by catalog-core-solr-->
                            org.locationtech.spatial4j.*;version=${solr.spatial4j.version},
                            org.locationtech.jts.*;version=${jts.spatial4j.version},
                            *
                        </Import-Package>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check-artifact-size</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <ArtifactSizeEnforcerRule
                                    implementation="org.codice.maven.artifactsize.ArtifactSizeEnforcerRule">
                                    <maxArtifactSize>4_MB</maxArtifactSize>
                                </ArtifactSizeEnforcerRule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <haltOnFailure>true</haltOnFailure>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit implementation="org.codice.jacoco.LenientLimit">
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>
                                        <limit implementation="org.codice.jacoco.LenientLimit">
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>
                                        <limit implementation="org.codice.jacoco.LenientLimit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>

                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
