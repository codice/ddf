################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

#
# The properties defined in this file will be made available through system
# properties at the very beginning of the Karaf's boot process.
#

# START DDF SETTINGS
# Set the keystore and truststore Java properties
javax.net.ssl.keyStore=etc/keystores/serverKeystore.jks
javax.net.ssl.keyStorePassword=changeit
javax.net.ssl.trustStore=etc/keystores/serverTruststore.jks
javax.net.ssl.trustStorePassword=changeit
javax.net.ssl.keyStoreType=jks

# Thread Pool Settings
# Size of thread pool used for handling queries, federating requests, and downloading resources
# See "Configuring Thread Pools" under "Managing" documentation.
org.codice.ddf.system.threadPoolSize=128

# HTTPS Specific settings.  If making a Secure Connection not leveraging the HTTPS Jaav libraries and 
# classes (e.g. if you are using secure sockets directly) then you will have to set this directly
https.cipherSuites=TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_DSS_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_128_CBC_SHA
https.protocols=TLSv1.1,TLSv1.2

javax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl
#javax.xml.transform.TransformerFactory=org.apache.xalan.processor.TransformerFactoryImpl

# Set an alternae Solr Catalog Data Dir
#solr.catalog.data.dir=/opt/solr/catalog/data
#END DDF SETTINGS

# Log level when the pax-logging service is not available
# This level will only be used while the pax-logging service bundle
# is not fully available.
# To change log levels, please refer to the org.ops4j.pax.logging.cfg file
# instead.
org.ops4j.pax.logging.DefaultServiceLog.level = ERROR

#
# Name of this Karaf instance.
#
karaf.name = root

#
# Default repository where bundles will be loaded from before using
# other Maven repositories.  For the full Maven configuration, see
# the org.ops4j.pax.url.mvn.cfg file.
#
karaf.default.repository = system

#
# Location of a shell script that will be run when starting a shell
# session.  This script can be used to create aliases and define
# additional commands.
#
karaf.shell.init.script = ${karaf.etc}/shell.init.script

#
# Sets the maximum size of the shell command history. If not set,
# defaults to 500 entries. Setting to 0 will disable history.
#
# karaf.shell.history.maxSize = 0


#
# Roles to use when logging into a local Karaf console.
# The syntax is the following:
#   [classname:]principal
# where classname is the class name of the principal object
# (defaults to org.apache.karaf.jaas.modules.RolePrincipal)
# and principal is the name of the principal of that class
# (defaults to admin).
#
karaf.local.roles = admin,manager,viewer

#
# Set this empty property to avoid errors when validating xml documents.
#
xml.catalog.files =

#
# Suppress the bell in the console when hitting backspace too many times
# for example
#
jline.nobell = true

#
# Deletes the entire karaf.data directory at every start
#
karaf.clean.all = false

#
# Deletes the karaf.data/cache directory at every start
#
karaf.clean.cache = false

#
# ServiceMix specs options
#
org.apache.servicemix.specs.debug = false
org.apache.servicemix.specs.timeout = 0

#
# Settings for the OSGi 4.3 Weaving
# By default, we will not weave any classes. Change this setting to include classes
# that you application needs to have woven.
#
org.apache.aries.proxy.weaving.enabled = none
# Classes not to weave - Aries default + Xerces which is known to have issues.
org.apache.aries.proxy.weaving.disabled = org.objectweb.asm.*,org.slf4j.*,org.apache.log4j.*,javax.*,org.apache.xerces.*

#
# By default, only Karaf shell commands are secured, but additional services can be
# secured by expanding this filter
#
karaf.secured.services=(&(osgi.command.scope=*)(osgi.command.function=*))

#
# Security properties
#
#java.security.policy=${karaf.home}/etc/all.policy
#org.osgi.framework.security=osgi
#org.osgi.framework.trust.repositories=${karaf.home}/etc/trustStore.ks
