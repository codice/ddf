# Log format to include log level, prefix, milliseconds, and the message
wrapper.console.format=LPZM

# Enables restart of JVM when it exits with 10. 10 is normally used by the karaf script to
# indicate a restart
wrapper.on_exit.10 = RESTART

# Defines a command file to be used by the ddf_on_error.sh script when executed following
# a non-recoverable system error and the JVM should be restarted
wrapper.commandfile = %KARAF_HOME%\bin\restart.jvm

# Additional JVM parameters
# note that n is the parameter number starting from 11 (1-10 is defined in ddf-wrapper.conf).
# ### make sure there is no gap renumber remaining parameters if you add, remove or uncomment lines
# ### Replace any <Number> with the next available number
wrapper.java.additional.11 = -server
wrapper.java.additional.12 = -Dfile.encoding=UTF8
wrapper.java.additional.13 = -Dkaraf.instances=%KARAF_HOME%\instances
wrapper.java.additional.14 = -Dkaraf.restart.jvm.supported=true
wrapper.java.additional.15 = -Djava.io.tmpdir=%KARAF_HOME%\data\tmp
wrapper.java.additional.16 = -Djava.util.logging.config.file=%KARAF_HOME%\etc\java.util.logging.properties
wrapper.java.additional.17 = -XX:+UnlockDiagnosticVMOptions
wrapper.java.additional.18 = -XX:+DisableAttachMechanism
wrapper.java.additional.19 = -XX:+UnsyncloadClass
wrapper.java.additional.20 = -Djava.awt.headless=true
wrapper.java.additional.21 = -Dddf.home=%KARAF_HOME%
wrapper.java.additional.22 = -Dddf.home.perm=%KARAF_HOME%\

# Enables MBean support for the service wrapper; used to trigger restart
wrapper.java.additional.23 = -Dorg.tanukisoftware.wrapper.WrapperManager.mbean=TRUE

# Error handling scripts
wrapper.java.additional.24 = "-XX:OnOutOfMemoryError=%KARAF_HOME%\bin\ddf_on_error.bat wrapper %p"
wrapper.java.additional.25 = "-XX:OnError=%KARAF_HOME%\bin\ddf_on_error.bat wrapper %p"

# Uncomment to enable cxf logging interceptors
# wrapper.java.additional.<Number> = -Dcom.sun.xml.ws.transport.http.HttpAdapter.dump=true

# Set the JVM initial and max heap space as desired
wrapper.java.initmemory = 2048
wrapper.java.maxmemory = 4096
