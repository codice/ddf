priority "grant";
// Double forward slashes "//" indicate comments and have no effect on policies.

// This policy file's intended usage is to contain appropriate sections for adding permissions related
// to configurations. For example, the Content Directory Monitor requires read/write permissions to
// the directory being monitored, and has an appropriate section below. Sections should contain
// sufficient details about adding permissions required for the given configuration.

// Instructions in this file may be duplicated in the documentation. Documentation provides better
// formatting and readability.

// When adding permissions for directories, trailing slashes have no effect on the permissions granted.
// For example, adding a permission for "/test/path" and "/test/path/" are equivalent. The recursive forms
// "/test/path${/}-", and "/test/path/${/}-" are also equivalent.

// IMPORTANT! - Adding new permissions requires a system restart to take affect.


//                        Content Directory Monitor (CDM) Permissions
// Adding required permissions for a new Content Directory Monitor.
//
// If monitoring a WebDav server, then adding these permissions is not required and these instructions can be ignored.
//
// Configuring CDM requires adding read and write permissions to the directory being monitored. For
// each configured CDM, the following 2 permissions are required:
//   1. permission java.io.FilePermission "<DIRECTORY_PATH>", "read";
//   2. permission java.io.FilePermission "<DIRECTORY_PATH>${/}-", "read, write";
// Replacing <DIRECTORY_PATH> with the path of the directory being monitored.
//
// Line 1 gives the CDM the permissions to read from the monitored directory path. Line 2 gives the
// CDM the permissions to recursively read and write from the monitored directory path, specified
// by the directory path's suffix "${/}-".
//
// If a CDM configuration is deleted, then the corresponding permissions that were added should be
// deleted to avoid granting unnecessary permissions to parts of the system.
//
grant codeBase "file:/catalog-core-directorymonitor/org.apache.camel.camel-core/org.apache.camel.camel-blueprint/catalog-core-camelcomponent/catalog-core-urlresourcereader/com.google.guava/catalog-core-standardframework/org.apache.tika.core" {
    // Add required CDM permissions here.

    // Example:
    // permission java.io.FilePermission "/test/some/monitored/directory", "read";
    // permission java.io.FilePermission "/test/some/monitored/directory${/}-", "read, write";
}

//                        URL Resource Reader Permissions
// Adding required permissions for the URL Resource Reader to retrieve file resources.
//
//
// The default configuration of the URL Resource Reader prevents it from reading arbitrary directories. To read from a directory, permission entries need to be added to this policy file.
// This is an example of how to give the URL Resource Reader permission to access a directory and everything it contains.
// grant codeBase "file:/org.apache.tika.core/catalog-core-urlresourcereader" {
     //# Add permission to read the directoroy
     // permission java.io.FilePermission "/test/some/directory", "read";
     
     //# Add permission to recursively read the files and sub directories
     // permission java.io.FilePermission "/test/some/directory${/}-", "read";
// }

//                       Security-Hardening: Backup Log File Permissions
//  Adding required permissions to the logger for read and write access to modified backup log files
//
//  If you want to change the default location of the backup security log files, add a new permission
//  allowing the logger to create and modify the files within the new directory.
//  If you haven't already done so, follow the Enabling Fallback Audit Logging steps in the security hardening
//  checklist to finish configuring backup logging
//
grant codeBase "file:/pax-logging-log4j2" {
    //  Add required permissions here.

    //  Example:
    //  permission java.io.FilePermission "/the/new/log/directory/-", "read, write";
    //  permission java.io.FilePermission "/the/new/log/directory", "read, write";
}
