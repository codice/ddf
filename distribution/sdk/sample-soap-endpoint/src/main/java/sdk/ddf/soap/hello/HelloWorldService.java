/**
 * Copyright (c) Codice Foundation
 *
 * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU
 * Lesser General Public License as published by the Free Software Foundation, either version 3 of
 * the License, or any later version.
 *
 * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public
 * License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 */
package sdk.ddf.soap.hello;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/** This class was generated by the JAX-WS RI. JAX-WS RI 2.1.7-b01- Generated source version: 2.1 */
@WebServiceClient(
  name = "HelloWorldService",
  targetNamespace = "http://ddf.sdk/soap/hello",
  wsdlLocation = "wsdl/"
)
public class HelloWorldService extends Service {

  private static final URL HELLOWORLDSERVICE_WSDL_LOCATION;

  private static final Logger LOGGER = Logger.getLogger(HelloWorldService.class.getName());

  static {
    URL url = null;
    try {
      URL baseUrl;
      baseUrl = HelloWorldService.class.getResource(".");
      url =
          new URL(
              baseUrl,
              "file:/Users/scott/git-workspace/DDF/ddf/sdk/sample-soap-endpoint/src/main/resources/META-INF/wsdl/sdk-transport.wsdl");
    } catch (MalformedURLException e) {
      LOGGER.warning(
          "Failed to create URL for the wsdl Location: 'file:/Users/scott/git-workspace/DDF/ddf/sdk/sample-soap-endpoint/src/main/resources/META-INF/wsdl/sdk-transport.wsdl', retrying as a local file");
      LOGGER.warning(e.getMessage());
    }
    HELLOWORLDSERVICE_WSDL_LOCATION = url;
  }

  public HelloWorldService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public HelloWorldService() {
    super(
        HELLOWORLDSERVICE_WSDL_LOCATION,
        new QName("http://ddf.sdk/soap/hello", "HelloWorldService"));
  }

  /** @return returns HelloWorldServicePort */
  @WebEndpoint(name = "HelloWorldServicePort")
  public HelloWorldServicePort getHelloWorldServicePort() {
    return super.getPort(
        new QName("http://ddf.sdk/soap/hello", "HelloWorldServicePort"),
        HelloWorldServicePort.class);
  }

  /**
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
   *     Supported features not in the <code>features</code> parameter will have their default
   *     values.
   * @return returns HelloWorldServicePort
   */
  @WebEndpoint(name = "HelloWorldServicePort")
  public HelloWorldServicePort getHelloWorldServicePort(WebServiceFeature... features) {
    return super.getPort(
        new QName("http://ddf.sdk/soap/hello", "HelloWorldServicePort"),
        HelloWorldServicePort.class,
        features);
  }
}
