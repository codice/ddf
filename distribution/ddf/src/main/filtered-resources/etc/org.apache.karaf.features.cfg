################################################################################
#
#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#
################################################################################

#
# Comma separated list of features repositories to register by default
#
featuresRepositories= \
 mvn:ddf.platform/platform-app/${project.version}/xml/features, \
 mvn:ddf.security/security-services-app/${project.version}/xml/features, \
 mvn:ddf.admin/admin-app/${project.version}/xml/features, \
 mvn:org.codice.ddf.broker/broker-app/${project.version}/xml/features, \
 mvn:ddf.catalog/catalog-app/${project.version}/xml/features, \
 mvn:ddf.catalog.solr/solr-app/${project.version}/xml/features, \
 mvn:org.codice.opendj.embedded/opendj-embedded-app/${opendj-embedded.app.version}/xml/features, \
 mvn:org.codice.ddf.spatial/spatial-app/${project.version}/xml/features, \
 mvn:ddf.ui/search-ui-app/${project.version}/xml/features, \
 mvn:org.codice.ddf.resourcemanagement/resourcemanagement-app/${project.version}/xml/features, \
 mvn:org.codice.ddf.spatial/geowebcache-app/${project.version}/xml/features, \
 mvn:org.codice.ddf.registry/registry-app/${project.version}/xml/features, \
 mvn:ddf.distribution/ddf-branding-app/${project.version}/xml/features, \
 mvn:ddf.distribution/install-profiles/${project.version}/xml/features

#
# Comma separated list of features to install at startup
#
# The parentheses in the featuresBoot list below is used to install sets of features in stages. See
# https://github.com/apache/karaf/blob/karaf-4.1.1/features/core/src/main/java/org/apache/karaf/features/internal/service/BootFeaturesInstaller.java#L105.
# The stages enforce an order of installation of features.
#
# This staged installation of these featuresBoot features provides another benefit besides
# eliminating the need for some prerequisite="true" flags. Without specifying these stages, all
# featuresBoot features were considered to be in the same stage, and they would all be installed at
# once. This means that if one feature failed to be installed, all of the featuresBoot features
# would fail to be installed. In this new configuration that includes the multi-stage installation,
# each stage is installed one after the other. This proves to be useful, especially, for the
# (kernel) step which starts the karaf console. For example, if platform-app failed to be installed,
# kernel and ddf-branding would already be installed. The Karaf console, which is started in the
# kernel feature, could be used to investigate why the platform-app failed.
#
# This multi-stage installation of the featuresBoot features is not documented well, but it appears
# to work for the current feature files included in DDF and in the itests. This configuration change
# to the DDF featuresBoot was made in the Karaf upgrade to 4.1.1.
#
# TODO DDF-3072 Investigate improvements of this configuration.
featuresBoot= \
 (kernel), \
 (ddf-branding), \
 (platform-app), \
 (security-services-app), \
 (admin-app, \
 admin-modules-installer)

#
# Defines if the boot features are started in asynchronous mode (in a dedicated thread)
#
featuresBootAsynchronous=false

#
# Service requirements enforcement
#
# By default, the feature resolver checks the service requirements/capabilities of
# bundles for new features (xml schema >= 1.3.0) in order to automatically install
# the required bundles.
# The following flag can have those values:
#   - disable: service requirements are completely ignored - disables auto refresh bundles
#   - default: service requirements are ignored for old features
#   - enforce: service requirements are always verified
#
serviceRequirements=disable
