<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
-->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>bundles</artifactId>
        <groupId>ddf.lib.bundles</groupId>
        <version>2.21.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>bundle</packaging>

    <artifactId>libs-bundles-opensaml</artifactId>
    <name>DDF :: Libs :: Bundles :: OpenSAML</name>

    <properties>
        <opensaml.version>3.3.0</opensaml.version>
        <!--  Keep in lockstep with DDF's version until security is refactored  -->
        <opensaml.guava.version>${guava.version-number}</opensaml.guava.version>
    </properties>

    <dependencies>
        <dependency>
            <!--  Note: Needs joda-time and metrics-core from dropwizard  -->
            <!--  And dropwizard is the one that depends on a util that depends on Guava  -->
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-core</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-soap-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-soap-impl</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-profile-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-xmlsec-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-xmlsec-impl</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <!--  Double check this one if you hit issues  -->
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-security-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-security-impl</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <!--  Note: Needs joda-time and httpclient  -->
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-messaging-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-saml-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <!--  Note: Needs velocity and httpclient  -->
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-saml-impl</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <!--  Note: Needs joda-time  -->
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-storage-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-xacml-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-xacml-impl</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-xacml-saml-api</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opensaml</groupId>
            <artifactId>opensaml-xacml-saml-impl</artifactId>
            <version>${opensaml.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>org.opensaml*</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>org.opensaml:opensaml</artifact>
                                    <excludes>
                                        <exclude>**/*.java</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <promoteTransitiveDependencies>true</promoteTransitiveDependencies>
                            <createDependencyReducedPom>true</createDependencyReducedPom>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
                        <Import-Package>
                            <!--  TODO (https://github.com/codice/ddf/issues/5327)
                                    Remove wrapped OpenSAML after security refactor is complete  -->
                            <!--  Do not allow the transitive javax.annotation dependency to leak  -->
                            !javax.annotation,
                            javax.servlet;resolution:=optional,
                            javax.servlet.http;resolution:=optional,
                            org.bouncycastle*;resolution:=optional,
                            org.apache.velocity*;resolution:=optional,
                            org.joda.time*;version="[2.2,3)",
                            org.cryptacular*;resolution:=optional,
                            org.apache.http*;resolution:=optional,
                            com.beust.jcommander*;resolution:=optional,
                            <!--  javax.annotation;version="[1,4)",  -->
                            <!--  Keep in lockstep with DDF's version until security is refactored  -->
                            com.google.common*;version="${opensaml.guava.version}",
                            *
                        </Import-Package>
                        <Private-Package>
                            schema;-split-package:=merge-first,
                            templates;-split-package:=merge-first,
                            net.shibboleth.utilities.java.support*
                        </Private-Package>
                        <Embed-Dependency/>
                        <Export-Package>
                            org.opensaml*;version="${opensaml.version}";-split-package:=merge-first,
                            net.shibboleth.utilities*;version="${opensaml.version}";-split-package:=merge-first
                        </Export-Package>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>check-artifact-size</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <ArtifactSizeEnforcerRule
                                        implementation="org.codice.maven.artifactsize.ArtifactSizeEnforcerRule">
                                    <maxArtifactSize>3.5_MB</maxArtifactSize>
                                </ArtifactSizeEnforcerRule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>