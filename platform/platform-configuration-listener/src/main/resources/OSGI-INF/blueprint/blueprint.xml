<?xml version="1.0" encoding="UTF-8"?>
<!-- /**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/ -->

<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.2.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <!--ext:property-placeholder/-->

    <ext:property-placeholder>
        <ext:default-properties>
            <ext:property name="configFileExtension" value=".config"/>
            <ext:property name="configFileDirectory" value="${ddf.home}/etc"/>
        </ext:default-properties>
    </ext:property-placeholder>

    <reference id="configurationAdmin" interface="org.osgi.service.cm.ConfigurationAdmin"/>

    <bean id="watchThread" class="java.util.concurrent.Executors"
          factory-method="newSingleThreadExecutor">
    </bean>

    <bean id="defaultFileSystem" class="java.nio.file.FileSystems" factory-method="getDefault">
    </bean>

    <bean id="watchService" factory-ref="defaultFileSystem" factory-method="newWatchService">
    </bean>

    <bean id="persistenceStrategy"
          class="org.codice.ddf.configuration.store.FelixPersistenceStrategy">
    </bean>

    <bean id="configDirectoryPath" class="java.nio.file.Paths" factory-method="get">
        <argument value="file://${configFileDirectory}"/>
    </bean>

    <bean id="configurationFilesPoller"
          class="org.codice.ddf.configuration.store.ConfigurationFilesPoller"
          destroy-method="destroy">
        <argument ref="configDirectoryPath"/>
        <argument value="${configFileExtension}"/>
        <argument ref="watchService"/>
        <argument ref="watchThread"/>
    </bean>

    <bean id="configDirectory" class="java.io.File">
        <argument value="${configFileDirectory}"/>
    </bean>

    <bean id="configurationFileDirectory"
          class="org.codice.ddf.configuration.store.ConfigurationFileDirectory">
        <argument ref="configDirectory"/>
        <argument value="${configFileExtension}"/>
    </bean>

    <bean id="fileHandler" class="org.codice.ddf.configuration.store.FileHandlerImpl"
          scope="singleton">
        <argument ref="configurationFileDirectory"/>
        <argument ref="configurationFilesPoller"/>
        <argument ref="persistenceStrategy"/>
    </bean>

    <bean id="configurationFileListener"
          class="org.codice.ddf.configuration.listener.ConfigurationFileListener"
          init-method="init">
        <argument ref="fileHandler"/>
        <argument ref="configurationAdmin"/>
    </bean>

    <bean id="configurationAdminListener"
          class="org.codice.ddf.configuration.listener.ConfigurationAdminListener">
        <argument ref="blueprintBundleContext"/>
        <argument ref="fileHandler"/>
    </bean>


    <service ref="configurationAdminListener"
             interface="org.osgi.service.cm.ConfigurationListener"/>

</blueprint>
