<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
 -->

<!--
     NOTE: This features XML file uses the Karaf "install" attribute to specify whether a feature
     is automatically installed when an app's KAR file is hot deployed.

     Description of the install attribute from the Karaf features XSD:

     "Installation mode. Can be either manual or auto. Specifies whether the feature should be
     automatically installed when dropped inside the deploy folder. Note: This attribute doesn't
     affect feature descriptors that are installed from the command line or as part of the
     org.apache.karaf.features.cfg."
-->
<features xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          name="${project.artifactId}-${project.version}"
          xmlns="http://karaf.apache.org/xmlns/features/v1.3.0"
          xsi:schemaLocation="http://karaf.apache.org/xmlns/features/v1.3.0 http://karaf.apache.org/xmlns/features/v1.3.0">

    <repository>mvn:org.apache.karaf.features/spring/${karaf.version}/xml/features</repository>
    <!--
    Begin Camel Features ${camel.version}; All feature definitions come from 3rd party feature file
        (org.apache.camel.karaf/apache-camel/${camel.version}/xml/features)

    DO NOT EDIT
    -->
    <!--We don't want this pulling in additional XML libraries on top of the ones already installed by CXF-->
    <!--<feature name="xml-specs-api" version="2.5.0"  start-level="10">-->
        <!--<bundle dependency="true">-->
            <!--mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/2.5.0-->
        <!--</bundle>-->
        <!--<bundle dependency="true">-->
            <!--mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/2.5.0-->
        <!--</bundle>-->
        <!--<bundle dependency="true">-->
            <!--mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/2.5.0-->
        <!--</bundle>-->
        <!--<bundle>mvn:org.codehaus.woodstox/stax2-api/3.1.4</bundle>-->
        <!--<bundle>mvn:org.codehaus.woodstox/woodstox-core-asl/4.4.1</bundle>-->
        <!--<bundle>-->
            <!--mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/2.2.6_1-->
        <!--</bundle>-->
    <!--</feature>-->
    <feature name='camel' install="manual" version='${camel.version}' start-level='50'>
        <!-- Added cxf as prereq to keep things ordered -->
        <feature prerequisite="true">cxf</feature>
        <feature version='${camel.version}'>camel-core</feature>
        <feature version='${camel.version}'>camel-blueprint</feature>
        <!-- we no longer install camel-spring by default as spring-dm is deprecated -->

    </feature>
    <feature name='camel-core' install="manual" version='${camel.version}' start-level='50'>
        <feature version="${cxf.version}">cxf-specs</feature>
        <bundle>mvn:org.apache.camel/camel-core/${camel.version}</bundle>
        <!-- the camel commands requires the camel-catalog to be installed -->
        <bundle>mvn:org.apache.camel/camel-catalog/${camel.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-commands-core/${camel.version}</bundle>
        <conditional>
            <condition>shell</condition>
            <bundle>mvn:org.apache.camel.karaf/camel-karaf-commands/${camel.version}</bundle>
        </conditional>
        <!--
         allow camel to access its own mbeans for karaf commands and other needs
        -->
        <config name="jmx.acl.org.apache.camel">* = *</config>
    </feature>
    <feature name="camel-catalog" install="manual" version="${camel.version}" start-level="50">
        <details>Install the camel catalog commands</details>
        <feature version='${camel.version}'>camel-core</feature>
        <conditional>
            <condition>shell</condition>
            <bundle>mvn:org.apache.camel.karaf/camel-karaf-commands-catalog/${camel.version}
            </bundle>
        </conditional>
    </feature>
    <feature name='camel-blueprint' install="manual" version='${camel.version}'
             start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle>mvn:org.apache.camel/camel-blueprint/${camel.version}</bundle>
    </feature>
    <feature name='camel-spring' install="manual" version='${camel.version}'
             start-level='50'>
        <bundle dependency='true'>
            mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/${geronimo-jta-spec.version}
        </bundle>
        <feature version='${spring.version.range}'>spring</feature>
        <feature version='${spring.version.range}'>spring-tx</feature>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle>mvn:org.apache.camel/camel-spring/${camel.version}</bundle>
    </feature>
    <feature name='camel-amqp' version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-jms</feature>
        <bundle dependency='true'>mvn:commons-lang/commons-lang/${commons-lang.version}</bundle>
        <bundle dependency='true'>
            mvn:commons-collections/commons-collections/${commons-collections.version}
        </bundle>
        <bundle dependency='true'>
            wrap:mvn:org.apache.qpid/qpid-jms-client/${qpid-jms-client.version}
        </bundle>
        <bundle dependency='true'>wrap:mvn:org.apache.qpid/proton-j/${qpid-proton-j.version}
        </bundle>
        <bundle dependency='true'>mvn:io.netty/netty-resolver/${camel.netty.version}</bundle>
        <bundle dependency='true'>mvn:io.netty/netty-common/${camel.netty.version}</bundle>
        <bundle dependency='true'>mvn:io.netty/netty-buffer/${camel.netty.version}</bundle>
        <bundle dependency='true'>mvn:io.netty/netty-transport/${camel.netty.version}</bundle>
        <bundle dependency='true'>mvn:io.netty/netty-handler/${camel.netty.version}</bundle>
        <bundle dependency='true'>mvn:io.netty/netty-transport-native-epoll/${camel.netty.version}
        </bundle>
        <bundle dependency='true'>mvn:io.netty/netty-codec/${camel.netty.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-amqp/${camel.version}</bundle>
    </feature>

    <!-- the following features are sorted A..Z -->
    <feature name='camel-context' install="manual" version='${camel.version}'
             start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle>mvn:org.apache.camel/camel-context/${camel.version}</bundle>
    </feature>
    <feature name='camel-cxf' install="manual" version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-blueprint</feature>
        <feature version='${camel.version}'>camel-spring</feature>
        <feature version='${cxf.version.range}'>cxf-core</feature>
        <feature version='${cxf.version.range}'>cxf-jaxrs</feature>
        <feature version='${cxf.version.range}'>cxf-jaxws</feature>
        <feature version='${cxf.version.range}'>cxf-http-jetty</feature>
        <feature version='${cxf.version.range}'>cxf-databinding-jaxb</feature>
        <feature version='${cxf.version.range}'>cxf-bindings-soap</feature>
        <bundle>mvn:org.apache.camel/camel-cxf-transport/${camel.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-cxf/${camel.version}</bundle>
    </feature>
    <feature name='camel-eventadmin' install="manual" version='${camel.version}'
             start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <feature>eventadmin</feature>
        <bundle>mvn:org.apache.camel/camel-eventadmin/${camel.version}</bundle>
    </feature>
    <feature name='camel-freemarker' install="manual" version='${camel.version}'
             start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle dependency='true'>
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.freemarker/${servicemix.bundles.freemarker.version}
        </bundle>
        <bundle>mvn:org.apache.camel/camel-freemarker/${camel.version}</bundle>
    </feature>
    <feature name='camel-http' install="manual" version='${camel.version}' start-level='50'>
        <!-- Added camel as prereq to keep things ordered -->
        <feature prerequisite="true">camel</feature>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle dependency='true'>
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.commons-httpclient/${servicemix.bundles.commons-httpclient.version}
        </bundle>
        <bundle dependency='true'>mvn:commons-codec/commons-codec/${commons-codec.version}</bundle>
        <bundle dependency='true'>mvn:javax.servlet/javax.servlet-api/${javax.servlet-api.version}
        </bundle>
        <bundle>mvn:org.apache.camel/camel-http-common/${camel.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-http/${camel.version}</bundle>
    </feature>
    <feature name='camel-jackson' install="manual" version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle dependency='true'>mvn:com.fasterxml.jackson.core/jackson-core/${jackson2.version}
        </bundle>
        <bundle dependency='true'>
            mvn:com.fasterxml.jackson.core/jackson-databind/${jackson2.version}
        </bundle>
        <bundle dependency='true'>
            mvn:com.fasterxml.jackson.core/jackson-annotations/${jackson2.version}
        </bundle>
        <bundle dependency='true'>
            mvn:com.fasterxml.jackson.module/jackson-module-jaxb-annotations/${jackson2.version}
        </bundle>
        <bundle>mvn:org.apache.camel/camel-jackson/${camel.version}</bundle>
    </feature>
    <feature name='camel-jaxb' install="manual" version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle>mvn:org.apache.camel/camel-jaxb/${camel.version}</bundle>
    </feature>
    <feature name='camel-jetty9' version='${camel.version}' start-level='50'>
        <feature>jetty</feature>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle>mvn:org.apache.camel/camel-http-common/${camel.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-jetty-common/${camel.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-jetty9/${camel.version}</bundle>
    </feature>
    <feature name='camel-jms' install="manual" version='${camel.version}'  start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <feature version='${spring.version.range}'>spring</feature>
        <feature version='${spring.version.range}'>spring-jms</feature>
        <bundle dependency='true'>
            mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/${geronimo-jta-spec.version}
        </bundle>
        <bundle dependency='true'>mvn:commons-pool/commons-pool/${commons-pool.version}</bundle>
        <bundle dependency='true'>
            mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/${geronimo-jms-spec.version}
        </bundle>
        <bundle>mvn:org.apache.camel/camel-jms/${camel.version}</bundle>
    </feature>
    <feature name='camel-protobuf' version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle dependency='true'>mvn:com.google.protobuf/protobuf-java/${protobuf.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-protobuf/${camel.version}</bundle>
    </feature>
    <feature name='camel-sjms' version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <!-- JTA is not currently supported by SJMS but is a required dependency of the Geronimo JMS Bundle -->
        <bundle dependency='true'>
            mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/${geronimo-jta-spec.version}
        </bundle>
        <bundle dependency='true'>
            mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/${geronimo-jms-spec.version}
        </bundle>
        <bundle dependency='true'>mvn:commons-pool/commons-pool/${commons-pool.version}</bundle>
        <bundle>mvn:org.apache.camel/camel-sjms/${camel.version}</bundle>
    </feature>
    <feature name='camel-stax' install="manual" version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle>mvn:org.apache.camel/camel-stax/${camel.version}</bundle>
    </feature>
    <feature name='camel-test' install="manual" version='${camel.version}' start-level='50'>
        <feature version='${camel.version}'>camel-core</feature>
        <bundle dependency='true'>
            mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.junit/${servicemix.bundles.junit.version}
        </bundle>
        <bundle>mvn:org.apache.camel/camel-test/${camel.version}</bundle>
    </feature>

    <!-- End Camel Features -->

    <!-- DO NOT EDIT
         CXF 3.1.4 Features; All feature definitions come from 3rd party feature file:
         apache-cxf-3.1.4-src/osgi/karaf/features/src/main/resources/features.xml

         DDF Changes made:
         cxf-transports-udp, cxf-ws-discovery-api, cxf-wsn, and cxf-ws-discovery
         features removed due to dependency on activemq and mina

         added install="manual" to all features

         removed cxf-rs-security-oauth and cxf-rs-security-oauth2 due to incompatibility
         with other implementations

         changed project.version to cxf.version

         removed feature references http-whiteboard (from cxf-http) and jetty (from cxf-http-jetty)
         to make it easier to directly use the pax features file to upgrade jetty versions.

     DO NOT EDIT
     -->
    <feature name="cxf-specs" version="${cxf.version}"  install="manual">
        <bundle start-level="9">mvn:org.apache.geronimo.specs/geronimo-osgi-registry/1.1</bundle>
        <bundle start-level="10" dependency="true">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.activation-api-1.1/${cxf.servicemix.specs.version}</bundle>
        <bundle start-level="10">mvn:javax.annotation/javax.annotation-api/${cxf.javax.annotation-api.version}</bundle>
        <bundle start-level="10" dependency="true">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.stax-api-1.0/${cxf.servicemix.specs.version}</bundle>
        <bundle start-level="10" dependency="true">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxb-api-2.2/${cxf.servicemix.specs.version}</bundle>
        <bundle start-level="10" dependency="true">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jaxws-api-2.2/${cxf.servicemix.specs.version}</bundle>
        <bundle start-level="10" dependency="true">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.saaj-api-1.3/${cxf.servicemix.specs.version}</bundle>
        <bundle start-level="10">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jsr339-api-2.0/${cxf.servicemix.specs.version.jaxrs}</bundle>
        <bundle start-level="10" dependency="true">mvn:javax.mail/mail/${cxf.javax.mail.version}</bundle>
        <bundle start-level="20">mvn:org.codehaus.woodstox/stax2-api/${cxf.woodstox.stax2-api.version}</bundle>
        <bundle start-level="20">mvn:org.codehaus.woodstox/woodstox-core-asl/${cxf.woodstox.core.version}</bundle>
        <bundle start-level="20">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/${cxf.jaxb.bundle.version}</bundle>
        <bundle start-level="20">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-xjc/${cxf.jaxb.bundle.version}</bundle>
    </feature>
    <feature name="cxf-jaxb" version="${cxf.version}"  install="manual">
        <feature version="${cxf.version}">cxf-specs</feature>
        <bundle start-level="20">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-impl/${cxf.jaxb.bundle.version}</bundle>
        <bundle start-level="20">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxb-xjc/${cxf.jaxb.bundle.version}</bundle>
    </feature>
    <!-- Current the abdera bundle is not working as we expect -->
    <feature name="cxf-abdera" version="${cxf.version}"  install="manual">
        <feature version="${cxf.version}">cxf-specs</feature>
        <bundle start-level="25" dependency="true">mvn:commons-codec/commons-codec/${cxf.commons-codec.version}</bundle>
        <bundle start-level="35">mvn:org.apache.abdera/abdera-core/${cxf.abdera.version}</bundle>
        <bundle start-level="35">mvn:org.apache.abdera/abdera-extensions-main/${cxf.abdera.version}</bundle>
        <bundle start-level="35">mvn:org.apache.abdera/abdera-i18n/${cxf.abdera.version}</bundle>
        <bundle start-level="35">mvn:org.apache.james/apache-mime4j-core/${cxf.james.mim4j.version}</bundle>
        <bundle start-level="35">mvn:org.apache.abdera/abdera-parser/${cxf.abdera.version}</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jdom/${cxf.jdom.bundle.version}</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.dom4j/${cxf.dom4j.bundle.version}</bundle>
        <!--bundle start-level='35'>mvn:org.apache.abdera/abdera-extensions-html/${cxf.abdera.version}</bundle>
        <bundle start-level='35'>mvn:org.apache.abdera/abdera-extensions-json/${cxf.abdera.version}</bundle>-->
    </feature>
    <feature name="wss4j" version="${cxf.wss4j.version}" install="manual">
        <feature version="${cxf.version}">cxf-specs</feature>
        <bundle start-level="25" dependency="true">mvn:joda-time/joda-time/${cxf.joda.time.version}</bundle>
        <bundle start-level="25" dependency="true">mvn:commons-codec/commons-codec/${cxf.commons-codec.version}</bundle>
        <bundle start-level="25" dependency="true">mvn:org.apache.santuario/xmlsec/${cxf.xmlsec.bundle.version}</bundle>
        <bundle start-level="25" dependency="true">mvn:com.google.guava/guava/${cxf.guava.version}</bundle>
        <bundle start-level="25" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.opensaml/${cxf.opensaml.osgi.version}</bundle>
        <bundle start-level="25">mvn:org.jvnet.staxex/stax-ex/${cxf.stax-ex.version}</bundle>
        <bundle start-level="25">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.saaj-impl/${cxf.saaj-impl.bundle.version}</bundle>
        <bundle start-level="25">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlresolver/${cxf.xmlresolver.bundle.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xerces/${cxf.xerces.bundle.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.bcel/${cxf.bcel.bundle.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xalan/${cxf.xalan.bundle.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.neethi/neethi/${cxf.neethi.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jasypt/${cxf.jasypt.bundle.version}</bundle>
        <bundle start-level="30">mvn:org.apache.wss4j/wss4j-bindings/${cxf.wss4j.version}</bundle>
        <bundle start-level="30">mvn:org.apache.wss4j/wss4j-ws-security-common/${cxf.wss4j.version}</bundle>
        <bundle start-level="30">mvn:org.apache.wss4j/wss4j-ws-security-dom/${cxf.wss4j.version}</bundle>
        <bundle start-level="30">mvn:org.apache.wss4j/wss4j-policy/${cxf.wss4j.version}</bundle>
        <bundle start-level="30">mvn:org.apache.wss4j/wss4j-ws-security-stax/${cxf.wss4j.version}</bundle>
        <bundle start-level="30">mvn:org.apache.wss4j/wss4j-ws-security-policy-stax/${cxf.wss4j.version}</bundle>
    </feature>
    <feature name="xmlschema-core" install="manual" version="${cxf.xmlschema.version}">
        <bundle start-level="30">mvn:org.apache.ws.xmlschema/xmlschema-core/${cxf.xmlschema.version}</bundle>
    </feature>
    <feature name="cxf-core" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${project.version}">web-container</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-specs</feature>
        <feature prerequisite="true" version="${cxf.xmlschema.version}">xmlschema-core</feature>
        <bundle start-level="25" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlresolver/${cxf.xmlresolver.bundle.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.fastinfoset/${cxf.fastinfoset.bundle.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-core/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-management/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-commands" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:org.apache.cxf.karaf/cxf-karaf-commands/${cxf.version}</bundle>
    </feature>
    <feature name="servicemix-wsdl4j" version="${cxf.wsdl4j.bundle.version}" install="manual">
        <bundle start-level="30">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.wsdl4j/${cxf.wsdl4j.bundle.version}</bundle>
    </feature>
    <feature name="cxf-wsdl" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-core</feature>
        <feature prerequisite="true" version="${cxf.wsdl4j.bundle.version}">servicemix-wsdl4j</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-wsdl/${cxf.version}</bundle>
    </feature>
    <feature name="neethi" version="${cxf.version}" install="manual">
        <bundle start-level="30">mvn:org.apache.neethi/neethi/${cxf.neethi.version}</bundle>
    </feature>
    <feature name="cxf-ws-policy" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-wsdl</feature>
        <feature prerequisite="true">neethi</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-ws-policy/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-ws-addr" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-ws-policy</feature>
        <feature version="${cxf.version}">cxf-bindings-soap</feature>
        <feature version="${cxf.version}">cxf-databinding-jaxb</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-ws-addr/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-ws-rm" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-ws-policy</feature>
        <feature version="${cxf.version}">cxf-ws-addr</feature>
        <feature version="${cxf.version}">cxf-databinding-jaxb</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-ws-rm/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-ws-mex" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-ws-policy</feature>
        <feature version="${cxf.version}">cxf-ws-addr</feature>
        <feature version="${cxf.version}">cxf-jaxws</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-ws-mex/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-ws-security" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-rt-security</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-ws-policy</feature>
        <feature prerequisite="true" version="${cxf.wss4j.version}">wss4j</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-ws-addr</feature>
        <bundle start-level="25">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.opensaml/${cxf.opensaml.osgi.version}</bundle>
        <bundle start-level="40" dependency="true">mvn:net.sf.ehcache/ehcache/${cxf.ehcache.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-ws-security/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-security-saml/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-rt-security" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-wsdl</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-security/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-rt-security-saml" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-rt-security</feature>
        <feature version="${cxf.wss4j.version}">wss4j</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-security-saml/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-http-client" version="${cxf.version}" install="manual">
        <!-- Can be used instead cxf-http for a smaller footprint -->
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:${cxf.servlet-api.group}/${cxf.servlet-api.artifact}/${cxf.servlet-api.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-http/${cxf.version}</bundle>
    </feature>

    <feature name="cxf-http" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature>http</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-http/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-http-jetty" version="${cxf.version}" install="manual">
        <feature version="[3,4)">cxf-http</feature>
        <feature version="[9,10)">jetty</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-http-jetty/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-http-async" version="${cxf.version}" install="manual">
        <feature version="[3,4)">cxf-http</feature>
        <bundle start-level="40">mvn:org.apache.httpcomponents/httpcore-osgi/${cxf.httpcomponents.core.version}</bundle>
        <bundle start-level="40">mvn:org.apache.httpcomponents/httpclient-osgi/${cxf.httpcomponents.client.version}</bundle>
        <bundle start-level="40">mvn:org.apache.httpcomponents/httpasyncclient-osgi/${cxf.httpcomponents.asyncclient.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-http-hc/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-http-netty-client" version="${cxf.version}" install="manual">
        <feature version="[3,4)">cxf-http</feature>
        <bundle start-level="40">mvn:io.netty/netty-common/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-handler/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-buffer/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-transport/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-codec/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-codec-http/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-http-netty-client/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-http-netty-server" version="${cxf.version}" install="manual">
        <feature version="[3,4)">cxf-http</feature>
        <bundle start-level="40">mvn:io.netty/netty-common/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-handler/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-buffer/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-transport/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-codec/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:io.netty/netty-codec-http/${cxf.netty.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-http-netty-server/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-bindings-soap" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-wsdl</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-bindings-xml/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-bindings-soap/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-jaxws" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-wsdl</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-databinding-jaxb</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-bindings-soap</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-http</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-frontend-simple/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-frontend-jaxws/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-jaxrs" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-core</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-http</feature>
        <bundle start-level="30" dependency="true">mvn:org.codehaus.jettison/jettison/${cxf.jettison.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-extension-providers/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-extension-search/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-service-description/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-frontend-jaxrs/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-client/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-rs-security-xml" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-jaxrs</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-rt-security-saml</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-security-xml/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-rs-security-sso-saml" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-rs-security-xml</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-security-sso-saml/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-rs-security-cors" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-jaxrs</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-security-cors/${cxf.version}</bundle>
    </feature>
    <!--
    <feature name="cxf-rs-security-oauth" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-jaxrs</feature>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.oauth-provider/${cxf.oauth.bundle.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-security-oauth/${cxf.version}</bundle>
    </feature>
    -->
    <feature name="cxf-rs-security-jose" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-jaxrs</feature>
        <feature version="${cxf.version}">cxf-rt-security</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-security-jose/${cxf.version}</bundle>
    </feature>
    <!--
    <feature name="cxf-rs-security-oauth2" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-rs-security-jose</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-security-oauth2/${cxf.version}</bundle>
    </feature>
    -->
    <feature name="cxf-rs-description-swagger2" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-jaxrs</feature>
        <bundle start-level="10" dependency="true">mvn:javax.validation/validation-api/${cxf.validation.api.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:org.apache.commons/commons-lang3/${cxf.commons-lang3.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:com.fasterxml.jackson.core/jackson-core/${cxf.jackson.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:com.fasterxml.jackson.core/jackson-annotations/${cxf.jackson.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:com.fasterxml.jackson.core/jackson-databind/${cxf.jackson.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:com.fasterxml.jackson.dataformat/jackson-dataformat-yaml/${cxf.jackson.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:com.fasterxml.jackson.jaxrs/jackson-jaxrs-base/${cxf.jackson.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:com.fasterxml.jackson.jaxrs/jackson-jaxrs-json-provider/${cxf.jackson.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.javassist/javassist/${cxf.javassist.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.reflections/${cxf.reflections.bundle.version}</bundle>
        <bundle start-level="25" dependency="true">mvn:com.google.guava/guava/${cxf.guava.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:io.swagger/swagger-annotations/${cxf.swagger2.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:io.swagger/swagger-models/${cxf.swagger2.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:io.swagger/swagger-core/${cxf.swagger2.version}</bundle>
        <bundle start-level="35" dependency="true">mvn:io.swagger/swagger-jaxrs/${cxf.swagger2.version}</bundle>
    </feature>
    <feature name="cxf-databinding-aegis" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-wsdl</feature>
        <feature version="${cxf.version}">cxf-bindings-soap</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-databinding-aegis/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-databinding-jibx" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-tools</feature>
        <bundle start-level="25" dependency="true">mvn:joda-time/joda-time/${cxf.joda.time.version}</bundle>
        <bundle start-level="40" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xpp3/${cxf.xpp3.bundle.version}</bundle>
        <bundle start-level="40" dependency="true">mvn:org.jibx/jibx-run/${cxf.jibx.version}</bundle>
        <bundle start-level="40" dependency="true">mvn:org.jibx/jibx-bind/${cxf.jibx.version}</bundle>
        <bundle start-level="40" dependency="true">mvn:org.jibx/jibx-schema/${cxf.jibx.version}</bundle>
        <bundle start-level="40" dependency="true">mvn:org.jibx/jibx-tools/${cxf.jibx.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-databinding-jibx/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-databinding-jaxb" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-databinding-jaxb/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-databinding-xmlbeans" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.xmlbeans/${cxf.xmlbeans.bundle.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-databinding-xmlbeans/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-features-clustering" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-features-clustering/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-features-logging" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-features-logging/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-features-throttling" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-features-throttling/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-features-metrics" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40" dependency='true'>mvn:io.dropwizard.metrics/metrics-core/${cxf.dropwizard.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-features-metrics/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-bindings-corba" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-wsdl</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-bindings-corba/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-bindings-coloc" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-bindings-coloc/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-bindings-object" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-transports-local</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-bindings-object/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-transports-local" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-local/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-transports-jms" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-bindings-soap</feature>
        <bundle dependency="true">mvn:org.apache.geronimo.specs/geronimo-jta_1.1_spec/1.1.1</bundle>
        <bundle dependency="true">mvn:org.apache.geronimo.specs/geronimo-jms_1.1_spec/${cxf.geronimo.jms.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-jms/${cxf.version}</bundle>
    </feature>
    <!--
    <feature name="cxf-transports-udp" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <bundle dependency="true">mvn:org.apache.mina/mina-core/${cxf.mina.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-udp/${cxf.version}</bundle>
    </feature>
    -->
    <feature name="cxf-transports-websocket-client" version="${cxf.version}" install="manual">
        <feature version="[3,4)">cxf-http</feature>
        <bundle dependency='true'>mvn:com.ning/async-http-client/${cxf.ahc.version}</bundle>
        <bundle dependency='true'>mvn:io.netty/netty/${cxf.netty3.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-websocket/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-transports-websocket-server" version="${cxf.version}" install="manual">
        <feature version="[3,4)">cxf-http</feature>
        <bundle dependency='true'>mvn:org.atmosphere/atmosphere-runtime/${cxf.atmosphere.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-transports-websocket/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-javascript" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-bindings-soap</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-javascript/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-frontend-javascript" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-jaxws</feature>
        <bundle start-level="40" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.rhino/${cxf.rhino.bundle.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-frontend-js/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-xjc-runtime" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-jaxb</feature>
        <bundle start-level="35" dependency="true">mvn:commons-lang/commons-lang/${cxf.commons-lang.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf.xjc-utils/cxf-xjc-runtime/${cxf.xjc-utils.version}</bundle>
    </feature>
    <feature name="cxf-tools" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-wsdl</feature>
        <feature version="${cxf.version}">cxf-databinding-jaxb</feature>
        <feature version="${cxf.version}">cxf-databinding-aegis</feature>
        <feature version="${cxf.version}">cxf-bindings-soap</feature>
        <feature version="${cxf.version}">cxf-jaxrs</feature>
        <feature version="${cxf.version}">cxf-jaxws</feature>
        <feature version="${cxf.version}">cxf-javascript</feature>
        <bundle start-level="35">mvn:commons-lang/commons-lang/${cxf.commons-lang.version}</bundle>
        <bundle>mvn:org.apache.velocity/velocity/${cxf.velocity.version}</bundle>
        <bundle>mvn:commons-collections/commons-collections/${cxf.commons-collections.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-common/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-java2ws/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-misctools/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-validator/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-wadlto-jaxrs/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-wsdlto-core/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-wsdlto-databinding-jaxb/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-wsdlto-frontend-javascript/${cxf.version}</bundle>
        <bundle>mvn:org.apache.cxf/cxf-tools-wsdlto-frontend-jaxws/${cxf.version}</bundle>
        <!-- need antlr
        <bundle>mvn:org.apache.cxf/cxf-tools-corba/${cxf.version}</bundle-->
    </feature>
    <feature name="cxf" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${project.version}">web-container</feature>
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-jaxws</feature>
        <feature version="${cxf.version}">cxf-jaxrs</feature>
        <feature version="${cxf.version}">cxf-databinding-jaxb</feature>
        <feature version="${cxf.version}">cxf-databinding-aegis</feature>
        <feature version="${cxf.version}">cxf-databinding-xmlbeans</feature>
        <feature version="${cxf.version}">cxf-bindings-corba</feature>
        <feature version="${cxf.version}">cxf-bindings-coloc</feature>
        <feature version="${cxf.version}">cxf-bindings-object</feature>
        <feature version="${cxf.version}">cxf-http-jetty</feature>
        <feature version="${cxf.version}">cxf-transports-local</feature>
        <feature version="${cxf.version}">cxf-transports-jms</feature>
        <!-- <feature version="${cxf.version}">cxf-transports-udp</feature> -->
        <feature version="${cxf.version}">cxf-xjc-runtime</feature>
        <feature version="${cxf.version}">cxf-ws-security</feature>
        <feature version="${cxf.version}">cxf-ws-rm</feature>
        <feature version="${cxf.version}">cxf-ws-mex</feature>
        <feature version="${cxf.version}">cxf-javascript</feature>
        <feature version="${cxf.version}">cxf-frontend-javascript</feature>
        <feature version="${cxf.version}">cxf-features-clustering</feature>
        <feature version="${cxf.version}">cxf-features-metrics</feature>
        <feature version="${cxf.version}">cxf-features-throttling</feature>
        <feature version="${cxf.version}">cxf-features-logging</feature>

        <!-- tools really aren't needed in OSGi by default
        <feature version="${cxf.version}">cxf-tools</feature>
        -->
        <!-- need msv
        <bundle>mvn:org.apache.cxf/cxf-wstx-msv-validation/${cxf.version}</bundle-->
        <!-- need sdo deps
        <bundle>mvn:org.apache.cxf/cxf-rt-databinding-sdo/${cxf.version}</bundle-->
    </feature>
    <feature name="cxf-sts" version="${cxf.version}" install="manual">
        <bundle start-level="40" dependency="true">mvn:com.hazelcast/hazelcast/${cxf.hazelcast.version}</bundle>
        <bundle start-level="40" dependency="true">mvn:net.sf.ehcache/ehcache/${cxf.ehcache.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-json-basic/${cxf.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-rs-security-jose/${cxf.version}</bundle>
        <feature version="${cxf.version}">cxf-core</feature>
        <feature version="${cxf.version}">cxf-ws-security</feature>
        <bundle>mvn:org.apache.cxf.services.sts/cxf-services-sts-core/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-wsn-api" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-ws-addr</feature>
        <feature version="${cxf.version}">cxf-jaxws</feature>
        <bundle>mvn:org.apache.cxf.services.wsn/cxf-services-wsn-api/${cxf.version}</bundle>
    </feature>
    <!--
    <feature name="cxf-wsn" version="${cxf.version}" install="manual">
        <config name="org.apache.cxf.wsn">
            cxf.wsn.activemq = vm:localhost
            cxf.wsn.rootUrl = http://0.0.0.0:8182
            cxf.wsn.context = /wsn
            cxf.wsn.activemq.username = karaf
            cxf.wsn.activemq.password = karaf
        </config>
        <feature version="[5.4,6)">activemq</feature>
        <feature version="${cxf.version}">cxf-wsn-api</feature>
        <feature version="${cxf.version}">cxf-http-jetty</feature>
        <bundle>mvn:org.apache.cxf.services.wsn/cxf-services-wsn-core/${cxf.version}</bundle>
    </feature>

    <feature name="cxf-ws-discovery-api" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-transports-udp</feature>
        <feature version="${cxf.version}">cxf-ws-addr</feature>
        <feature version="${cxf.version}">cxf-jaxws</feature>
        <bundle>mvn:org.apache.cxf.services.ws-discovery/cxf-services-ws-discovery-api/${cxf.version}</bundle>
    </feature>
    <feature name="cxf-ws-discovery" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-ws-discovery-api</feature>
        <bundle>mvn:org.apache.cxf.services.ws-discovery/cxf-services-ws-discovery-service/${cxf.version}</bundle>
    </feature>
    -->
    <feature name="cxf-bean-validation-core" version="${cxf.version}" install="manual">
        <bundle start-level="10" dependency="true">mvn:org.apache.servicemix.specs/org.apache.servicemix.specs.jsr303-api-${cxf.osgi.validation.api.version}/${cxf.servicemix.specs.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.hibernate-validator/${cxf.hibernate-validator.bundle.version}</bundle>
    </feature>

    <feature name="cxf-bean-validation" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-bean-validation-core</feature>
        <bundle start-level="30" dependency="true">mvn:javax.el/javax.el-api/${cxf.javax.el.version}</bundle>
        <bundle start-level="30" dependency="true">mvn:org.glassfish/javax.el/${cxf.javax.el.version}</bundle>
    </feature>

    <feature name="cxf-management-web" version="${cxf.version}" install="manual">
        <feature prerequisite="true" version="${cxf.version}">cxf-core</feature>
        <feature prerequisite="true" version="${cxf.version}">cxf-jaxrs</feature>
        <bundle start-level="35" dependency="true">mvn:commons-lang/commons-lang/${cxf.commons-lang.version}</bundle>
        <bundle start-level="25" dependency="true">mvn:commons-codec/commons-codec/${cxf.commons-codec.version}</bundle>
        <bundle start-level="35">mvn:org.apache.abdera/abdera-core/${cxf.abdera.version}</bundle>
        <bundle start-level="35">mvn:org.apache.abdera/abdera-i18n/${cxf.abdera.version}</bundle>
        <bundle start-level="35">mvn:org.apache.james/apache-mime4j-core/${cxf.james.mim4j.version}</bundle>
        <bundle start-level="35">mvn:org.apache.abdera/abdera-parser/${cxf.abdera.version}</bundle>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-rt-management-web/${cxf.version}</bundle>
    </feature>

    <feature name="cxf-jaxrs-cdi" version="${cxf.version}" install="manual">
        <feature version="${cxf.version}">cxf-jaxrs</feature>
        <bundle start-level="40">mvn:org.apache.cxf/cxf-integration-cdi/${cxf.version}</bundle>
    </feature>
    <!-- End CXF Features -->

    <feature name="platform-api" install="manual" version="${project.version}"
             description="Top Level Platform API">
        <bundle dependency="true">wrap:mvn:net.jodah/failsafe/${jodah-failsafe.version}</bundle>
        <bundle>mvn:ddf.platform.api/platform-api/${project.version}</bundle>
    </feature>

    <feature name ="platform-migratable-api" install="manual" version="${project.version}"
             description="Platform Migratable API">
        <bundle>mvn:ddf.platform.migration/platform-migratable-api/${project.version}</bundle>
    </feature>

    <feature name ="platform-migratable" install="manual" version="${project.version}"
             description="Exports Platform configurations and system files">
        <bundle>mvn:ddf.platform/platform-migratable/${project.version}</bundle>
    </feature>

    <feature name ="platform-migration" install="manual" version="${project.version}"
             description="Listens for new configuration files and updates configuration admin with the new configurations.">
        <bundle>mvn:ddf.platform.migration/platform-migration/${project.version}</bundle>
    </feature>

    <feature name="platform-scheduler" install="manual" version="${project.version}"
             description="Schedules tasks">
        <feature prerequisite="true">security-core-api</feature>
        <bundle>mvn:ddf.platform/platform-scheduler/${project.version}</bundle>
    </feature>

    <feature name="security-logger" install="manual" version="${project.version}"
             description="Logs incoming and outgoing requests">
        <feature prerequisite="true">security-core-api</feature>
        <bundle>mvn:ddf.security.interceptor/security-interceptor-logger/${project.version}</bundle>
    </feature>

    <feature name="platform-commands" install="manual" version="${project.version}"
             description="Platform Command line tools">
        <feature prerequisite="true">platform-configuration</feature>
        <bundle>mvn:ddf.platform/platform-commands/${project.version}</bundle>
    </feature>

    <feature name="platform-configuration" install="manual" version="${project.version}"
             description="Shared platform configuration">
        <feature prerequisite="true">landing-page</feature>
        <bundle>mvn:ddf.platform/platform-configuration/${project.version}</bundle>
    </feature>

    <feature name="platform-country-local" install="manual" version="${project.version}"
             description="Service to convert country codes into various formats by performing a local lookup.">
        <bundle>mvn:ddf.platform.country/platform-country-converter-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform.country/platform-country-converter-local/${project.version}</bundle>
    </feature>

    <feature name="action-core-api" install="manual" version="${project.version}"
             description="DDF Action API">
        <bundle>mvn:ddf.action.core/action-core-api/${project.version}</bundle>
    </feature>

    <feature name="action-core-impl" install="manual" version="${project.version}"
             description="DDF Action Core">
        <feature>action-core-api</feature>
        <bundle>mvn:ddf.action.core/action-core-impl/${project.version}</bundle>
    </feature>
    <feature name="notifications-core-api" install="manual" version="${project.version}"
             description="DDF Notifications API">
        <bundle>mvn:ddf.notifications.core/platform-notifications-core-api/${project.version}</bundle>
    </feature>

    <feature name="notifications-core" install="manual" version="${project.version}"
             description="DDF Notifications Core">
        <feature>notifications-core-api</feature>
        <feature>persistence-core-api</feature>
        <bundle>mvn:ddf.notifications.core/platform-core-notifications/${project.version}</bundle>
    </feature>

    <feature name="notifications-commands" install="manual" version="${project.version}"
             description="DDF Notifications Console Commands">
        <feature>notifications-core-api</feature>
        <feature>persistence-core-api</feature>
        <bundle>mvn:ddf.notifications.core/platform-core-notificationcommands/${project.version}</bundle>
    </feature>

    <feature name="mime-core-api" install="manual" version="${project.version}"
             description="DDF MIME API">
        <feature prerequisite="true">platform-dependencies</feature>
        <bundle>mvn:ddf.mime.core/mime-core-api/${project.version}</bundle>
    </feature>

    <feature name="mime-core" install="manual" version="${project.version}"
             description="DDF MIME Core">
        <feature>mime-core-api</feature>
        <bundle>mvn:ddf.mime.core/mime-core-impl/${project.version}</bundle>
        <bundle>mvn:ddf.mime.core/mime-core-configurableresolver/${project.version}</bundle>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.csw.config">mvn:ddf.platform/platform-app/${project.version}/config/csw</configfile>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.geojson.config">mvn:ddf.platform/platform-app/${project.version}/config/geojson</configfile>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.nitf.config">mvn:ddf.platform/platform-app/${project.version}/config/nitf</configfile>
        <configfile finalname="/etc/DDF_Custom_Mime_Type_Resolver.xml.config">mvn:ddf.platform/platform-app/${project.version}/config/xml</configfile>
    </feature>

    <feature name="mime-tika-resolver" install="manual" version="${project.version}"
             description="DDF Tika MIME Resolver.">
        <bundle>mvn:ddf.mime.tika/mime-tika-resolver/${project.version}</bundle>
    </feature>

    <feature name="security-core-api" install="manual" version="${project.version}"
             description="DDF Security Core">
        <feature prerequisite="true">cxf-rt-security</feature>
        <feature prerequisite="true" version="${spring.version}_1">spring</feature>
        <bundle>mvn:org.apache.shiro/shiro-core/${shiro.version}</bundle>
        <bundle>mvn:ddf.security.core/security-core-api/${project.version}</bundle>
        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.jaxen/${org.apache.servicemix.bundles.jaxen.version}</bundle>
    </feature>

    <feature name="security-encryption" install="manual" version="${project.version}"
             description="DDF Security Encryption">
        <bundle>mvn:ddf.security.encryption/security-encryption-api/${project.version}</bundle>
        <bundle>mvn:ddf.security.encryption/security-encryption-impl/${project.version}</bundle>
        <bundle>mvn:ddf.security.encryption/security-encryption-commands/${project.version}</bundle>
    </feature>

    <feature name="metrics-reporting" install="manual" version="${project.version}"
             description="Metrics reporting for DDF.">
        <bundle>mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.poi/3.9_2</bundle>
        <bundle>mvn:com.googlecode.json-simple/json-simple/1.1.1</bundle>
        <bundle>mvn:ddf.metrics.reporting/metrics-reporting/${project.version}</bundle>
    </feature>

    <feature name="metrics-services" install="manual" version="${project.version}"
             description="cxf interceptors to capture metrics.">
        <bundle>mvn:ddf.metrics.interceptor/metrics-interceptor/${project.version}</bundle>
    </feature>

    <feature name="compression-exi" install="manual" version="${project.version}"
             description="Adds EXI compression support for CXF services.">
        <bundle>mvn:ddf.compression/compression-exi/${project.version}</bundle>
    </feature>

    <feature name="compression-gzip" install="manual" version="${project.version}"
             description="Adds GZip compression support for CXF services.">
        <bundle>mvn:ddf.compression/compression-gzip/${project.version}</bundle>
    </feature>

    <feature name="banana" install="auto" version="${project.version}"
             description="Adds banana">
        <feature prerequisite="true">platform-dependencies</feature>
        <feature prerequisite="true" version="${project.version}">solr</feature>
        <bundle>mvn:ddf.platform.solr/solr-banana/${project.version}/war</bundle>
        <bundle>mvn:ddf.platform.solr/solr-banana-provisioner/${project.version}</bundle>

        <configfile finalname="/data/solr/banana/conf/schema.xml">
            mvn:ddf.platform.solr/solr-banana/${project.version}/xml/bananaschema
        </configfile>
        <configfile finalname="/examples/banana/DefaultDashboard.json">
            mvn:ddf.platform.solr/solr-banana/${project.version}/json/bananadashboard
        </configfile>
    </feature>

    <feature name="solr" install="manual" version="${project.version}"
             description="DDF Standalone Solr Server">
        <bundle>mvn:org.codice.thirdparty/jts/${jts.bundle.version}</bundle>
        <bundle>mvn:org.codice.thirdparty/gt-opengis/${opengis.bundle.version}</bundle>
        <bundle>mvn:org.codice.thirdparty/picocontainer/1.2_1</bundle>
        <bundle>mvn:org.codice.thirdparty/vecmath/1.3.2_1</bundle>
        <!-- for GeoTools -->
        <bundle>mvn:org.codice.thirdparty/geotools-suite/${org.geotools.bundle.version}</bundle>

        <bundle>mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/war</bundle>
        <configfile finalname="/solr/solr.xml">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/xml/solr
        </configfile>
        <configfile finalname="/solr/collection1/conf/solrconfig.xml">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/xml/solrconfig
        </configfile>
        <configfile finalname="/solr/collection1/conf/schema.xml">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/xml/schema
        </configfile>
        <configfile finalname="/solr/collection1/conf/protwords.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/protwords
        </configfile>
        <configfile finalname="/solr/collection1/conf/stopwords_en.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/stopwords_en
        </configfile>
        <configfile finalname="/solr/collection1/conf/stopwords.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/stopwords
        </configfile>
        <configfile finalname="/solr/collection1/conf/synonyms.txt">
            mvn:ddf.platform.solr/platform-solr-server-standalone/${project.version}/txt/synonyms
        </configfile>
    </feature>

    <feature name="persistence-core-api" install="manual" version="${project.version}"
             description="DDF Internal Persistence Core API">
        <bundle>mvn:ddf.persistence.core/persistence-core-api/${project.version}</bundle>
    </feature>

    <feature name="persistence-core" install="manual" version="${project.version}"
             description="DDF Internal Persistence Core Implementation">
        <feature prerequisite="true" version="${project.version}">solr</feature>
        <feature>persistence-core-api</feature>
        <bundle>mvn:ddf.persistence.core/persistence-core-impl/${project.version}</bundle>
        <bundle>mvn:ddf.persistence.core/persistence-core-commands/${project.version}</bundle>
        <bundle>mvn:org.codice.thirdparty/gt-opengis/${opengis.bundle.version}</bundle>
        <bundle>mvn:ddf.persistence.core/persistence-core-listeners/${project.version}</bundle>
        <bundle>mvn:ddf.persistence.core/persistence-core-attributes-impl/${project.version}</bundle>
    </feature>

    <feature name="error" install="manual" version="${project.version}"
             description="Platform error handler.">
        <bundle>mvn:ddf.platform.error/platform-error-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform.error/platform-error-impl/${project.version}</bundle>
    </feature>

    <feature name="parser-xml" install="manual" version="${project.version}"
             description="Platform JAXB support.">
        <bundle>mvn:ddf.platform/platform-parser-api/${project.version}</bundle>
        <bundle>mvn:ddf.platform/platform-parser-xml/${project.version}</bundle>
    </feature>

    <feature name="platform-filter-delegate" install="manual" version="${project.version}">
        <feature prerequisite="true" version="${project.version}">kernel</feature>
        <feature prerequisite="true">pax-http-jetty</feature>
        <feature prerequisite="true">pax-jetty</feature>
        <bundle dependency="true">mvn:com.google.guava/guava/${guava.version}</bundle>
        <bundle start-level="30">mvn:ddf.platform/platform-filter-delegate/${project.version}</bundle>
    </feature>

    <feature name="web-container" install="manual" version="${project.version}">
        <feature prerequisite="true">platform-filter-delegate</feature>
        <feature prerequisite="true">platform-paxweb-jettyconfig</feature>
        <feature>war</feature>
    </feature>

    <feature name="platform-app" install="auto" version="${project.version}"
             description="Installs the DDF platform boot features which all other applications depend upon.\nPlatform features installed by default include Apache CXF, Apache Camel, Action Framework, MIME Framework, Metrics, Security Core API and Security Encryption::Platform">
        <feature prerequisite="true">web-container</feature>
        <feature prerequisite="true">platform-dependencies</feature>
        <feature>platform-all</feature>
    </feature>

    <feature name="platform-dependencies" version="${project.version}" install="manual" hidden="true">
        <feature prerequisite="true">branding-api</feature>
        <feature prerequisite="true">wrap</feature>
        <feature prerequisite="true">camel-http</feature>
        <bundle dependency="true">mvn:ch.qos.cal10n/cal10n-api/0.7.4</bundle>
        <bundle dependency="true">mvn:org.slf4j/slf4j-ext/${org.slf4j.version}</bundle>
        <bundle dependency="true">mvn:commons-io/commons-io/${commons-io.version}</bundle>
        <bundle dependency="true">mvn:commons-lang/commons-lang/2.6</bundle>
        <bundle dependency="true">mvn:org.ops4j.base/ops4j-base-lang/${org.ops4j-base-lang}</bundle>
        <bundle dependency="true">mvn:org.ops4j.pax.swissbox/pax-swissbox-lifecycle/${org.ops4j.pax.swissbox.version}</bundle>
        <bundle dependency="true">mvn:org.ops4j.pax.swissbox/pax-swissbox-optional-jcl/${org.ops4j.pax.swissbox.version}</bundle>
        <bundle dependency="true">mvn:org.ops4j.pax.swissbox/pax-swissbox-extender/${org.ops4j.pax.swissbox.version}</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.saxon/${saxon.bundle.plugin}</bundle>
        <bundle dependency="true">mvn:org.joda/joda-convert/${joda-convert.version}</bundle>
        <bundle dependency="true">mvn:org.apache.servicemix.bundles/org.apache.servicemix.bundles.javax-inject/${javax.inject.bundle.version}</bundle>
        <bundle dependency="true">mvn:javax.validation/validation-api/${validation.version}</bundle>
        <bundle dependency="true">mvn:com.google.guava/guava/${guava.version}</bundle>
    </feature>

    <!-- This can be removed when we have upgraded to Karaf 4.1.0
    https://codice.atlassian.net/browse/DDF-2132 -->
    <feature name="log4j2-temporary" install="manual" version="${project.version}" hidden="true">
        <!-- This bundle can be removed when Karaf moves to Log4J2 as its default platform -->
        <bundle>mvn:org.ops4j.pax.logging/pax-logging-log4j2/1.8.5</bundle>
    </feature>

    <feature name="platform-all" install="manual" version="${project.version}" hidden="true">
        <feature prerequisite="true">platform-api</feature>
        <bundle>mvn:ddf.platform/platform-logging/${project.version}</bundle>
        <feature prerequisite="true">platform-migrate-all</feature>
        <feature>platform-scheduler</feature>
        <feature>platform-commands</feature>
        <feature>platform-configuration</feature>
        <feature>action-core-api</feature>
        <feature>action-core-impl</feature>
        <feature>notifications-core</feature>
        <feature>mime-core</feature>
        <feature>mime-tika-resolver</feature>
        <feature>security-encryption</feature>
        <feature>security-core-api</feature>
        <feature>metrics-reporting</feature>
        <feature>metrics-services</feature>
        <feature>security-logger</feature>
        <feature>solr</feature>
        <feature>persistence-core</feature>
        <feature>error</feature>
        <feature>parser-xml</feature>
        <feature>landing-page</feature>
    </feature>

    <feature name="clientinfo-filter" install="auto" version="${project.version}"
             description="Servlet filter to extract client information from the request">
        <feature prerequisite="true">security-core-api</feature>
        <bundle>mvn:ddf.platform/platform-filter-clientinfo/${project.version}</bundle>
    </feature>

    <feature name="platform-paxweb-jettyconfig" install="manual" version="${project.version}"
             description="Custom Session Manager">
        <feature>pax-jetty</feature>
        <bundle dependency="true">wrap:mvn:net.jodah/failsafe/${jodah-failsafe.version}</bundle>
        <bundle>mvn:ddf.platform/platform-paxweb-jettyconfig/${project.version}</bundle>
    </feature>

    <feature name="platform-http-proxy" install="manual" version="${project.version}"
             description="HTTP to HTTPS proxy.">
        <feature prerequisite="true">camel-jetty9</feature>
        <bundle>mvn:ddf.platform/platform-http-proxy/${project.version}</bundle>
    </feature>

    <feature name="landing-page" install="manual" version="${project.version}"
             description="Landing page and branding support.">
        <feature prerequisite="true">platform-dependencies</feature>
        <feature>ddf-branding</feature>
        <bundle>mvn:ddf.platform/landing-page/${project.version}</bundle>
    </feature>

    <feature name="platform-migrate-all" version="${project.version}">
        <feature prerequisite="true">platform-dependencies</feature>
        <feature>platform-migratable-api</feature>
        <feature>platform-migration</feature>
        <feature>platform-migratable</feature>
    </feature>

    <feature name="netty-core" install="manual" version="${netty.version}"
             description="Netty libraries">
        <bundle>mvn:io.netty/netty-common/${netty.version}</bundle>
        <bundle>mvn:io.netty/netty-resolver/${netty.version}</bundle>
        <bundle>mvn:io.netty/netty-transport/${netty.version}</bundle>
        <bundle>mvn:io.netty/netty-buffer/${netty.version}</bundle>
        <bundle>mvn:io.netty/netty-codec/${netty.version}</bundle>
        <bundle>mvn:io.netty/netty-handler/${netty.version}</bundle>
    </feature>

    <feature name="artemis-core" install="manual" version="${artemis.version}" description="ActiveMQ Artemis broker libraries">
        <feature>transaction</feature>
        <feature>netty-core</feature>
        <feature>scr</feature>
        <configfile finalname="etc/org.apache.activemq.artemis.cfg">mvn:org.apache.activemq/artemis-features/${artemis.version}/cfg</configfile>
        <configfile finalname="etc/artemis.xml">mvn:org.apache.activemq/artemis-features/${artemis.version}/xml/artemis</configfile>

        <bundle>mvn:org.apache.geronimo.specs/geronimo-jms_2.0_spec/${geronimo-jms_2_spec.version}</bundle>
        <bundle>mvn:com.google.guava/guava/19.0</bundle>
        <bundle>mvn:io.netty/netty-codec-http/${netty.version}</bundle>
        <bundle>mvn:commons-beanutils/commons-beanutils/${commons-beanutils.version}</bundle>
        <bundle>mvn:commons-collections/commons-collections/${commons-collections.version}</bundle>

        <bundle>mvn:org.jboss.logging/jboss-logging/${jboss-logging.version}</bundle>
        <bundle>mvn:org.jgroups/jgroups/${jgroups.version}</bundle>

        <bundle>mvn:org.apache.geronimo.specs/geronimo-json_1.0_spec/${geronimo-json-spec.version}
        </bundle>
        <bundle>mvn:org.apache.johnzon/johnzon-core/${johnzon.version}</bundle>

        <bundle>mvn:org.apache.activemq/artemis-native/${artemis.version}</bundle>
        <bundle>mvn:org.apache.activemq/artemis-server-osgi/${artemis.version}</bundle>
    </feature>

    <feature name="artemis-amqp" install="manual" version="${artemis.version}" description="ActiveMQ Artemis AMQP protocol libraries">
        <feature prerequisite="true">wrap</feature>
        <feature prerequisite="true">artemis-core</feature>
        <bundle>wrap:mvn:org.apache.qpid/proton-j/${proton.version}</bundle>
        <bundle>wrap:mvn:org.apache.qpid/qpid-jms-client/${qpid-jms.version}</bundle>
        <bundle>mvn:org.apache.activemq/artemis-amqp-protocol/${artemis.version}</bundle>
    </feature>

    <feature name="artemis-stomp" install="manual" version="${artemis.version}"
             description="ActiveMQ Artemis Stomp protocol libraries">
        <feature prerequisite="true">artemis-core</feature>
        <bundle>mvn:org.apache.activemq/artemis-stomp-protocol/${artemis.version}</bundle>
    </feature>

    <feature name="artemis-mqtt" install="manual" version="${artemis.version}"
             description="ActiveMQ Artemis MQTT protocol libraries">
        <feature prerequisite="true">artemis-core</feature>
        <bundle>mvn:io.netty/netty-codec-mqtt/${netty.version}</bundle>
        <bundle>mvn:org.apache.activemq/artemis-mqtt-protocol/${artemis.version}</bundle>
    </feature>

    <feature name="artemis-hornetq" install="manual" version="${artemis.version}"
             description="ActiveMQ Artemis HornetQ protocol libraries">
        <feature prerequisite="true">artemis-core</feature>
        <bundle>mvn:org.apache.activemq/artemis-hqclient-protocol/${artemis.version}</bundle>
        <bundle>mvn:org.apache.activemq/artemis-hornetq-protocol/${artemis.version}</bundle>
    </feature>

    <feature name="artemis-openwire" install="manual" version="${artemis.version}"
             description="ActiveMQ Artemis HornetQ protocol libraries">
        <feature prerequisite="true">artemis-core</feature>
        <bundle>mvn:org.fusesource.hawtbuf/hawtbuf/1.11</bundle>
        <bundle>mvn:org.apache.geronimo.specs/geronimo-j2ee-management_1.1_spec/1.0.1</bundle>
        <bundle>mvn:org.apache.activemq/artemis-openwire-protocol/${artemis.version}</bundle>
    </feature>

</features>
