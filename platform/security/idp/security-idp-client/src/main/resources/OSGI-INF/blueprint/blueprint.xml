<?xml version="1.0" encoding="UTF-8"?>
<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
-->
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.2.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.2.0"
           xmlns:jaxrs="http://cxf.apache.org/blueprint/jaxrs"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="
  http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <type-converters>
        <bean id="relayStatesConverter"
              class="ddf.security.samlp.impl.RelayStatesConverter"/>
    </type-converters>

    <ext:property-placeholder/>

    <bean id="idpMetadata" class="org.codice.ddf.security.idp.client.IdpMetadata">
        <cm:managed-properties persistent-id="org.codice.ddf.security.idp.client.IdpMetadata"
                               update-strategy="container-managed"/>
        <property name="metadata" value="https://${org.codice.ddf.system.hostname}:${org.codice.ddf.system.httpsPort}/services/idp/login/metadata" />
    </bean>

    <reference id="encryptionService" interface="ddf.security.encryption.EncryptionService"/>

    <reference id="sessionFactory" interface="ddf.security.http.SessionFactory"
               filter="(id=http)"/>

    <reference id="httpSessionInvalidator" interface="org.codice.ddf.platform.session.api.HttpSessionInvalidator"/>

    <reference id="securityManager" interface="ddf.security.service.SecurityManager"/>

    <bean id="crypto" class="ddf.security.samlp.SystemCrypto">
        <argument value="${ddf.etc}/ws-security/server/encryption.properties"/>
        <argument value="${ddf.etc}/ws-security/server/signature.properties"/>
        <argument ref="encryptionService"/>
    </bean>

    <bean id="simpleSign" class="ddf.security.samlp.SimpleSign">
        <argument ref="crypto" />
    </bean>

    <bean id="relayStates" class="ddf.security.samlp.impl.RelayStates"/>

    <bean id="idpHandler" class="org.codice.ddf.security.idp.client.IdpHandler">
        <cm:managed-properties persistent-id="org.codice.ddf.security.idp.client.IdpHandler"
                               update-strategy="container-managed"/>
        <argument ref="simpleSign"/>
        <argument ref="idpMetadata"/>
        <argument ref="relayStates"/>
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="authContextClasses">
            <list>
                <value>urn:oasis:names:tc:SAML:2.0:ac:classes:Password</value>
                <value>urn:oasis:names:tc:SAML:2.0:ac:classes:PasswordProtectedTransport</value>
                <value>urn:oasis:names:tc:SAML:2.0:ac:classes:X509</value>
                <value>urn:oasis:names:tc:SAML:2.0:ac:classes:SmartcardPKI</value>
                <value>urn:oasis:names:tc:SAML:2.0:ac:classes:SoftwarePKI</value>
                <value>urn:oasis:names:tc:SAML:2.0:ac:classes:SPKI</value>
                <value>urn:oasis:names:tc:SAML:2.0:ac:classes:TLSClient</value>
            </list>
        </property>
    </bean>

    <service ref="idpHandler"             interface="org.codice.ddf.security.handler.api.AuthenticationHandler"/>

    <bean id="assertionConsumerService"
          class=" org.codice.ddf.security.idp.client.AssertionConsumerService">
        <argument ref="simpleSign"/>
        <argument ref="idpMetadata"/>
        <argument ref="crypto"/>
        <argument ref="relayStates"/>
        <property name="loginFilter">
            <reference interface="org.codice.ddf.platform.filter.SecurityFilter"
                       filter="(osgi.http.whiteboard.filter.name=login-filter)"/>
        </property>
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="logoutRequestService"
          class="org.codice.ddf.security.idp.client.LogoutRequestService" init-method="init">
        <cm:managed-properties persistent-id="org.codice.ddf.security.idp.client.LogoutRequestService"
                               update-strategy="container-managed"/>
        <argument ref="simpleSign"/>
        <argument ref="idpMetadata"/>
        <argument ref="relayStates"/>
        <property name="logoutMessage">
            <reference interface="ddf.security.samlp.LogoutMessage" />
        </property>
        <property name="encryptionService" ref="encryptionService"/>
        <property name="sessionFactory" ref="sessionFactory"/>
        <property name="httpSessionInvalidator" ref="httpSessionInvalidator"/>
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <jaxrs:server id="restService" address="/saml">
        <jaxrs:serviceBeans>
            <ref component-id="assertionConsumerService"/>
            <ref component-id="logoutRequestService"/>
        </jaxrs:serviceBeans>
    </jaxrs:server>

    <service interface="ddf.action.ActionProvider">
        <service-properties>
            <entry key="id" value="security.logout.idp"/>
        </service-properties>
        <bean class="org.codice.ddf.security.idp.client.IdpLogoutActionProvider">
            <property name="encryptionService" ref="encryptionService"/>
        </bean>
    </service>

</blueprint>