<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version. 
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
-->
<blueprint xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
           xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0">
    <ext:property-placeholder />

    <command-bundle xmlns="http://karaf.apache.org/xmlns/shell/v1.1.0">
        <command>
            <action
                    class="org.codice.ddf.migration.commands.MigrationStatusCommand">
                <argument ref="configStatusService"/>
            </action>
        </command>
        <command>
            <action class="org.codice.ddf.migration.commands.ExportCommand">
                <argument ref="configurationMigrationService"/>
                <argument ref="security"/>
                <argument ref="defaultExportDirectoryPath"/>
            </action>
        </command>
    </command-bundle>

    <reference id="configStatusService"
               interface="org.codice.ddf.configuration.status.ConfigurationStatusService"/>

    <reference id="configurationMigrationService"
               interface="org.codice.ddf.configuration.migration.ConfigurationMigrationService"/>

    <bean id="security" class="org.codice.ddf.security.common.Security"
          factory-method="getInstance"/>

    <!-- Base URI for DDF home -->
    <bean id="ddfHomeFile" class="java.io.File">
        <argument value="${ddf.home}"/>
    </bean>

    <bean id="ddfHomeUri" class="java.net.URI" factory-ref="ddfHomeFile" factory-method="toURI"/>

    <!-- Default Directory Export Path -->
    <bean id="defaultExportDirectoryUri" class="java.nio.file.Uri" factory-ref="ddfHomeUri"
          factory-method="resolve">
        <argument value="${ddf.home}/etc/exported"/>
    </bean>

    <bean id="defaultExportDirectoryPath" class="java.nio.file.Paths" factory-method="get">
        <argument ref="defaultExportDirectoryUri"/>
    </bean>

</blueprint>
