<!--
/**
 * Copyright (c) Codice Foundation
 *
 * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser General Public License as published by the Free Software Foundation, either
 * version 3 of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public License is distributed along with this program and can be found at
 * <http://www.gnu.org/licenses/lgpl.html>.
 *
 **/
-->
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0">

    <!--ldap config handler-->
    <bean id="ldapConfigurationHandler" class="org.codice.ui.admin.ldap.config.LdapConfigurationHandler"/>
    <service ref="ldapConfigurationHandler"
             interface="org.codice.ui.admin.wizard.api.ConfigurationHandler"/>

    <bean id="embeddedLdapConfigurationHandler" class="org.codice.ui.admin.ldap.config.EmbeddedLdapConfigurationHandler"/>
    <service ref="embeddedLdapConfigurationHandler"
             interface="org.codice.ui.admin.wizard.api.ConfigurationHandler"/>

    <!--source config handlers-->
    <bean id="cswConfigurationHandler" class="org.codice.ui.admin.sources.config.csw.CswSourceConfigurationHandler"/>
    <service ref="cswConfigurationHandler">
        <interfaces>
            <value>org.codice.ui.admin.sources.config.SourceConfigurationHandler</value>
            <value>org.codice.ui.admin.wizard.api.ConfigurationHandler</value>
        </interfaces>
    </service>

    <bean id="wfsConfigurationHandler" class="org.codice.ui.admin.sources.config.wfs.WfsSourceConfigurationHandler"/>
    <service ref="wfsConfigurationHandler">
        <interfaces>
            <value>org.codice.ui.admin.sources.config.SourceConfigurationHandler</value>
            <value>org.codice.ui.admin.wizard.api.ConfigurationHandler</value>
        </interfaces>
    </service>

    <bean id="openSearchConfigurationHandler" class="org.codice.ui.admin.sources.config.opensearch.OpenSearchSourceConfigurationHandler"/>
    <service ref="openSearchConfigurationHandler">
        <interfaces>
            <value>org.codice.ui.admin.sources.config.SourceConfigurationHandler</value>
            <value>org.codice.ui.admin.wizard.api.ConfigurationHandler</value>
        </interfaces>
    </service>

    <bean id="sourceConfigurationHandler" class="org.codice.ui.admin.sources.config.SourceConfigurationHandlerImpl">
        <property name="sourceConfigurationHandlers" ref="sourceConfigurationHandlers"/>
    </bean>
    <service ref="sourceConfigurationHandler"
             interface="org.codice.ui.admin.wizard.api.ConfigurationHandler">
    </service>

    <reference-list id="sourceConfigurationHandlers" interface="org.codice.ui.admin.sources.config.SourceConfigurationHandler" availability="optional"/>

    <!--web context policy manager handler-->

    <reference id="policyManager" interface="org.codice.ddf.security.policy.context.ContextPolicyManager" />

    <service id="policyManagerConfigurationHandler"
             interface="org.codice.ui.admin.wizard.api.ConfigurationHandler">

        <bean class="org.codice.ui.admin.security.policy.context.ContextPolicyManagerHandler">
            <property name="policyManager" ref="policyManager"/>
        </bean>
    </service>

    <!--config handler router-->

    <reference-list id="configurationHandlers" interface="org.codice.ui.admin.wizard.api.ConfigurationHandler" availability="optional">
        <reference-listener bind-method="registerConfigType" ref="configurationRouter"/>
    </reference-list>

    <bean id="configurationRouter" class="org.codice.ui.admin.wizard.ConfigurationRouter">
        <property name="contextPath" value="/admin/wizard"/>
        <property name="configurationHandlers" ref="configurationHandlers"/>
    </bean>


    <bean id="sparkServlet" class="org.codice.ui.admin.wizard.SparkServlet">
        <property name="sparkApplications">
            <list>
                <ref component-id="configurationRouter"/>
            </list>
        </property>
        <property name="filterMappingPattern" value="/admin/wizard/*"/>
    </bean>

    <service ref="sparkServlet" interface="javax.servlet.Servlet">
        <service-properties>
            <entry key="urlPatterns" value="/admin/wizard/*"/>
        </service-properties>
    </service>

    <!-- Admin Module Additions -->
    <bean id="securityModule" class="org.codice.ui.admin.ldap.SecurityModule"/>
    <service ref="securityModule" interface="org.codice.ddf.ui.admin.api.module.AdminModule"/>
</blueprint>