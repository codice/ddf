//golden layout theming only, other styles should go below in their own nest
@{customElementNamespace}golden-layout {
  .lm_maximised ~ .lm_item {
    display: none;
  }

  .lm_maximised .lm_header,
  .lm_goldenlayout,
  .lm_item,
  .lm_content,
  .lm_items,
  .lm_item_container,
  .lm_content {
    background: inherit !important;
  }

  .lm_header,
  .lm_items {
    position: relative;
    z-index: 1;
  }
  .lm_items {
    z-index: 0;
  }

  .lm_tab {
    height: @minimumButtonSize !important;
    line-height: @minimumButtonSize;
    background: inherit !important;
    box-shadow: none !important;
  }

  .lm_tabs .lm_tab {
    opacity: 0.4;
  }

  .lm_tab.lm_active {
    opacity: 1;
  }

  .lm_tabdropdown_list {
    background: @backgroundDropdown !important;
  }

  .lm_tabdropdown_list .lm_title {
    color: contrast(@backgroundDropdown) !important;
  }
  .lm_tabdropdown_list .lm_tab:hover {
    background: fade(contrast(@backgroundDropdown), 10%) !important;
  }

  .lm_header .lm_tabdropdown_list {
    z-index: @zIndexDropdown;
    .dropshadow;
  }

  .lm_close_tab {
    height: @minimumButtonSize !important;
    top: 0px !important;
    right: 0px !important;
    position: static !important;
    display: inline-block !important;
    width: @minimumButtonSize !important;
    vertical-align: top;
    font-size: @largeFontSize !important;
    background: none !important;
    opacity: @minimumOpacity !important;
  }

  .lm_close_tab:before {
    content: '\F00D';
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }

  .lm_close_tab:hover {
    background: none !important;
    opacity: 1 !important;
  }

  .lm_controls {
    li {
      min-width: @minimumButtonSize;
      width: auto !important;
      height: @minimumButtonSize !important;
      line-height: @minimumButtonSize !important;
      font-size: @largeFontSize;
      background-image: none !important;
      transition: none !important;
    }
    li:hover {
      background: none !important;
    }
    .lm_maximise:not([title='minimise']):before {
      content: '\f065';
      font: normal normal normal 14px/1 FontAwesome;
      font-size: inherit;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
    .lm_maximise[title='minimise']:before {
      content: '\f066';
      font: normal normal normal 14px/1 FontAwesome;
      font-size: inherit;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
    .lm_close:before {
      content: '\F00D';
      font: normal normal normal 14px/1 FontAwesome;
      font-size: inherit;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
    .lm_tabdropdown:before {
      content: '\F0D7' !important;
      width: auto !important;
      height: auto !important;
      border: none !important;
      font: normal normal normal 14px/1 FontAwesome;
      font-size: inherit;
      text-rendering: auto;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
    }
    right: 0px !important;
  }

  .lm_drag_handle {
    position: static !important;
    height: 100% !important;
    width: 100% !important;
  }

  .lm_vertical .lm_drag_handle {
    height: 200% !important; // adds a little invisible extra for clickability
  }

  .lm_horizontal .lm_drag_handle {
    width: 200% !important; // adds a little invisible extra for clickability
  }

  .lm_splitter {
    opacity: 1;
  }

  .lm_splitter:hover,
  .lm_splitter.lm_dragging {
    background: @primary-color !important;
  }

  .lm_title {
    padding: 0px @minimumSpacing !important;
  }

  .lm_header .lm_tab {
    font-size: @largeFontSize;
  }

  .lm_tab {
    padding: 0px 0px !important;
    margin: 0px !important;
  }

  .lm_horizontal .lm_drag_handle::after {
    content: '\f07e';
  }

  .lm_vertical .lm_drag_handle::after {
    content: '\f07d';
  }

  .lm_horizontal .lm_drag_handle::after,
  .lm_vertical .lm_drag_handle::after {
    height: @minimumButtonSize;
    width: @minimumButtonSize;
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate3d(-50%, -50%, 0);
    font: normal normal normal 14px/1 FontAwesome;
    font-size: @largeFontSize;
    line-height: @minimumButtonSize;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-align: center;
    opacity: 0;
  }

  .lm_vertical:hover .lm_drag_handle::after,
  .lm_horizontal:hover .lm_drag_handle::after {
    opacity: 1;
  }
}

.lm_dragging,
.lm_dragging * {
  cursor: grabbing !important;
  cursor: -moz-grabbing !important;
  cursor: -webkit-grabbing !important;
}

@{customElementNamespace}golden-layout {
  .customElement;
  background: inherit !important;
  position: relative;

  > .golden-layout-toolbar {
    position: absolute;
    left: 0px;
    bottom: 0%;
    width: 100%;
    white-space: nowrap;
    height: @minimumButtonSize;
    line-height: @minimumButtonSize;
    text-align: center;
    .dropshadow;
    > * {
      display: inline-block;
    }
    > span {
      padding: 0px @minimumSpacing;
      font-size: @largeFontSize;
    }
    button {
      padding: 0px @minimumSpacing;
    }
  }

  > .golden-layout-container {
    height: ~'calc(100% - @{minimumButtonSize})';
    background: inherit;
    overflow: hidden;
  }

  > .golden-layout-toolbar {
    .toolbar-actions {
      position: absolute;
      right: 0px;
      z-index: @zIndexContent;
    }

    .toolbar-actions > div {
      display: inline-block;
      vertical-align: top;
    }

    .to-toggle-size {
      min-width: @minimumButtonSize;
      vertical-align: top;
      display: none;
    }

    .to-toggle-size {
      .fa-chevron-down {
        display: inline;
      }
      .fa-chevron-up {
        display: none;
      }
    }
  }
}

@{customElementNamespace}golden-layout.is-minimised {
  > .golden-layout-toolbar {
    z-index: @zIndexContent;
    background: inherit;
    transform: translateY(100%);
    height: 0;

    > span {
      display: none;
    }

    .toolbar-actions {
      background: inherit;
      transform: translateY(-100%);
    }
    .toolbar-actions > :not(.to-toggle-size):not(.to-add) {
      display: none;
    }
    .to-toggle-size,
    .to-show {
      background: @backgroundDropdown;
      display: inline-block;
      opacity: 1;
      .dropshadow;
    }
    .to-toggle-size {
      .fa-chevron-down {
        display: none;
      }
      .fa-chevron-up {
        display: inline;
      }
    }
    .to-toggle-size > span {
      opacity: @minimumOpacity;
    }
    .to-toggle-size:hover > span {
      opacity: 1;
    }

    .to-add .dropdown-label {
      display: none;
    }

    .to-toggle-size,
    .to-add {
      background: inherit;
      .dropshadow;
    }
  }

  > .golden-layout-container {
    height: ~'calc(100%)';
  }
}

@{customElementNamespace}golden-layout.is-maximised {
  // might be useful to make it clearer to the user in the future when they're in this mode
}

@{customElementNamespace}golden-layout.is-empty {
  // might be useful to make it clearer to the user in the future when they're in this mode
}

//interim styles (delete me later, after we add layout switching etc.)
@{customElementNamespace}golden-layout.is-minimised {
  > .golden-layout-toolbar {
    .to-add .dropdown-label {
      display: inline !important;
    }
  }
}

@{customElementNamespace}golden-layout {
  .to-toggle-size {
    display: none !important;
  }
}
