@{customElementNamespace}filter {
  .customElement;
  white-space: nowrap;
  margin: @minimumSpacing;

  > .filter-rearrange,
  > .filter-remove,
  > .filter-attribute,
  > .filter-comparator,
  > .filter-input {
    display: inline-block;
    vertical-align: middle;
    margin-right: @minimumSpacing;
  }

  > .filter-rearrange {
    .grab-cursor();
    // margin-left: @minimumSpacing;
    width: 0.75 * @minimumButtonSize;
    //height: ~'calc(100% + @minimumSpacing)';
    opacity: 0.25;
  }

  > .filter-rearrange:hover {
    // .dropshadowlight; -- only highlights the target region. Need to apply this to one element up in the tree
    opacity: 0.50;
    transition: opacity 0.3s ease-in-out;
  }

  > .filter-comparator,
  > .filter-attribute {
    height: @minimumButtonSize;
    line-height: @minimumButtonSize;
  }

  > .filter-remove {
    width: @minimumButtonSize;
    height: @minimumButtonSize;
    display: none;
  }

  > .filter-input {
    min-width: 12.5*@minimumFontSize;
  }

  > .filter-attribute {
    @{customElementNamespace}dropdown.is-editing .dropdown-text {
      width: auto;
      max-width: 300px;
    }
  }
}

@{customElementNamespace}filter.hide-rearrange {
  > .filter-rearrange {
    display: none;
  }
}

@{customElementNamespace}filter.is-location {
  > .filter-input {
    margin-top: @minimumSpacing;
    display: block;
  }
}

@{customElementNamespace}filter-collection {
  > @{customElementNamespace}filter.is-editing {
    > .filter-remove {
      display: inline-block;
    }
  }
}