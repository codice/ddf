.customElement {
  width: 100%;
  height: 100%;
  display: block;
}

.resetIconLineHeight {
  .fa {
    line-height: inherit;
  }
}

.boxShadow {
  box-shadow: 0px 0px 1px white;
  overflow: hidden;
}

.boxShadowTop {
  box-shadow: inset 0px 1px 1px -1px white;
  overflow: hidden;
}

.boxShadowBottom {
  box-shadow: inset 0px -1px 1px -1px white;
  overflow: hidden;
}

.is-clickable {
  cursor: pointer;
}

.is-negative {
  color: contrast(@negative-color);
  background: @negative-color;
}

.is-neutral {
  color: contrast(@primary-color);
  background: @primary-color;
}

.is-positive {
  color: contrast(@positive-color);
  background: @positive-color;
}

.is-button {
  cursor: pointer;
  opacity: @minimumOpacity;

  &:hover:not(.is-disabled) {
    opacity: 1;
  }

  &.is-active:not(.is-disabled) {
    opacity: 1;
  }
}

.is-button.is-img {
  cursor: pointer;
  opacity: 1;

  button {
    opacity: @minimumOpacity;
  }

  &:hover button {
    opacity: 1;
  }

  &.is-active button {
    opacity: 1;
  }
}

.is-dropdown {
  cursor: pointer;

  &:hover {
    background: rgba(66,66,66,.9);
  }
}

.is-dropdown.is-open {

  &:hover {
    background: rgba(66,66,66,.6);
  }
}

.grab-cursor {
  cursor: move;
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
}

.is-input(@contrastColor: white) {
  @{customElementNamespace}metacard-preview {
    color: @contrastColor;
    background: fade(@contrastColor, 10%);
  }
  .is-input,
  input,
  input.form-control,
  .select2-container--default .select2-selection--single,
  @{customElementNamespace}input.is-range {
    color: @contrastColor;
    background: fade(@contrastColor, 10%);
    border: 2px solid fade(@contrastColor, 10%);
    outline: none;
    border-radius: @border-radius;
  }
  input::placeholder,
  input::-ms-input-placeholder {
    color: fadeout(@contrastColor, 50%);
  }
  .input-group > .input-group-addon,
  .ui-multiselect.ui-widget {
    color: @contrastColor;
    background: fade(@contrastColor, 5%);
    border-color: fade(@contrastColor, 5%);
  }
  label.btn {
    color: @contrastColor;
    background: fade(@contrastColor, 15%);
  }
  label.btn + label.btn {
    border-left: 1px solid fade(@contrastColor, 40%);
  }
  .btn-group,
  .input-group {
    border: 1px solid fade(@contrastColor, 40%);
  }
  .btn:hover {
    color: @contrastColor;
  }
  @{customElementNamespace}input.is-boolean {
    .checkbox-placeholder {
      border: 1px solid fade(@contrastColor, 5%);
      background: fade(@contrastColor, 5%);
    }
  }
  @{customElementNamespace}radio {
    border: 1px solid fade(@contrastColor, 40%);
    button + button {
      border-left: 1px solid fade(@contrastColor, 40%);
    }
  }
  @{customElementNamespace}histogram {
    .hovertext rect, .hovertext path, .axistext path {
      fill: @backgroundDropdown !important;
      stroke: contrast(@backgroundDropdown) !important;
      fill-opacity: 1 !important;
    }
    .hovertext text, .axistext text {
      fill: contrast(@backgroundDropdown) !important;
    }
    svg text {
      fill: @contrastColor !important;
    }
    svg .subplot.xy path.ygrid {
      stroke: @contrastColor !important;
    }
    svg .barlayer .trace.bars:nth-of-type(1) path,
    svg .barlayer .trace.bars:nth-of-type(2) path,
    svg .legend .traces:nth-of-type(1) path,
    svg .legend .traces:nth-of-type(2) path {
      fill: fade(@contrastColor, 80%) !important;
      stroke: @contrastColor !important;
    }
  }
  //specific stylings only for golden-layout (not the component)
  @{customElementNamespace}golden-layout {
    .lm_splitter {
      background: fade(contrast(@contrastColor), 40%);
    }
    .lm_tabs .lm_tab {
      border: 1px solid fade(@contrastColor, 10%);
    }
    .lm_tab.lm_active {
      color: @contrastColor !important;
      background: fade(@contrastColor, 0%) !important;
      border-bottom: none;
    }
    .lm_tabs .lm_tab:hover {
      color: @contrastColor !important;
    }
    .lm_header,
    .lm_tabs .lm_tab,
    .lm_tabdropdown:before {
      color: @contrastColor !important;
    }
  }
  @{customElementNamespace}tabs {
    .tabs-list {
      border-bottom: 1px solid fade(@contrastColor, 10%);
    }
  }
  @{customElementNamespace}table {
    th + th,
    td + td  {
      border-left: 1px solid fade(@contrastColor, 5%);
    }
    .is-thead > th {
      border-bottom: 1px solid fade(@contrastColor, 80%);
    }
  }
  @{customElementNamespace}table-visibility,
  @{customElementNamespace}table-rearrange {
    background: fade(contrast(@contrastColor), 80%) !important;
    color: @contrastColor;
    .column {
      border-top: 1px solid fade(@contrastColor, 80%) !important;
      border-bottom: 1px solid fade(@contrastColor, 80%) !important;
     }
  }
  @{customElementNamespace}upload-item {
    .info-progress,
    .info-success,
    .info-error {
      background: fade(@contrastColor, 5%);
    }
  }
  @{customElementNamespace}upload-summary {
    .summary-progress {
      background: fade(@contrastColor, 10%);
    }
  }
  @{customElementNamespace}input.is-autocomplete {
    .select2-container--default .select2-selection--single .select2-selection__rendered {
      color: @contrastColor;
    }
  }
}

.is-input();